#ifndef GL_HPP_GL_ES_VERSION_3_1_HPP
#define GL_HPP_GL_ES_VERSION_3_1_HPP
#include "common.hpp"


#ifndef GL_HPP_API_NAME
#define GL_HPP_API_NAME GL_HPP_GLES_API
#endif
#ifndef GL_HPP_API_VERSION
#define GL_HPP_API_VERSION 310
#endif
#undef GL_FALSE
static const GLenum GL_FALSE=0
#undef GL_NO_ERROR
static const GLenum GL_NO_ERROR=0
#undef GL_NONE
static const GLenum GL_NONE=0
#undef GL_ZERO
static const GLenum GL_ZERO=0
#undef GL_POINTS
static const GLenum GL_POINTS=0x0000
#undef GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT
static const GLenum GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT=0x00000001
#undef GL_SYNC_FLUSH_COMMANDS_BIT
static const GLenum GL_SYNC_FLUSH_COMMANDS_BIT=0x00000001
#undef GL_VERTEX_SHADER_BIT
static const GLenum GL_VERTEX_SHADER_BIT=0x00000001
#undef GL_FRAGMENT_SHADER_BIT
static const GLenum GL_FRAGMENT_SHADER_BIT=0x00000002
#undef GL_ELEMENT_ARRAY_BARRIER_BIT
static const GLenum GL_ELEMENT_ARRAY_BARRIER_BIT=0x00000002
#undef GL_UNIFORM_BARRIER_BIT
static const GLenum GL_UNIFORM_BARRIER_BIT=0x00000004
#undef GL_TEXTURE_FETCH_BARRIER_BIT
static const GLenum GL_TEXTURE_FETCH_BARRIER_BIT=0x00000008
#undef GL_COMPUTE_SHADER_BIT
static const GLenum GL_COMPUTE_SHADER_BIT=0x00000020
#undef GL_SHADER_IMAGE_ACCESS_BARRIER_BIT
static const GLenum GL_SHADER_IMAGE_ACCESS_BARRIER_BIT=0x00000020
#undef GL_COMMAND_BARRIER_BIT
static const GLenum GL_COMMAND_BARRIER_BIT=0x00000040
#undef GL_PIXEL_BUFFER_BARRIER_BIT
static const GLenum GL_PIXEL_BUFFER_BARRIER_BIT=0x00000080
#undef GL_DEPTH_BUFFER_BIT
static const GLenum GL_DEPTH_BUFFER_BIT=0x00000100
#undef GL_TEXTURE_UPDATE_BARRIER_BIT
static const GLenum GL_TEXTURE_UPDATE_BARRIER_BIT=0x00000100
#undef GL_BUFFER_UPDATE_BARRIER_BIT
static const GLenum GL_BUFFER_UPDATE_BARRIER_BIT=0x00000200
#undef GL_FRAMEBUFFER_BARRIER_BIT
static const GLenum GL_FRAMEBUFFER_BARRIER_BIT=0x00000400
#undef GL_STENCIL_BUFFER_BIT
static const GLenum GL_STENCIL_BUFFER_BIT=0x00000400
#undef GL_TRANSFORM_FEEDBACK_BARRIER_BIT
static const GLenum GL_TRANSFORM_FEEDBACK_BARRIER_BIT=0x00000800
#undef GL_ATOMIC_COUNTER_BARRIER_BIT
static const GLenum GL_ATOMIC_COUNTER_BARRIER_BIT=0x00001000
#undef GL_SHADER_STORAGE_BARRIER_BIT
static const GLenum GL_SHADER_STORAGE_BARRIER_BIT=0x00002000
#undef GL_COLOR_BUFFER_BIT
static const GLenum GL_COLOR_BUFFER_BIT=0x00004000
#undef GL_LINES
static const GLenum GL_LINES=0x0001
#undef GL_MAP_READ_BIT
static const GLenum GL_MAP_READ_BIT=0x0001
#undef GL_LINE_LOOP
static const GLenum GL_LINE_LOOP=0x0002
#undef GL_MAP_WRITE_BIT
static const GLenum GL_MAP_WRITE_BIT=0x0002
#undef GL_LINE_STRIP
static const GLenum GL_LINE_STRIP=0x0003
#undef GL_MAP_INVALIDATE_RANGE_BIT
static const GLenum GL_MAP_INVALIDATE_RANGE_BIT=0x0004
#undef GL_TRIANGLES
static const GLenum GL_TRIANGLES=0x0004
#undef GL_TRIANGLE_STRIP
static const GLenum GL_TRIANGLE_STRIP=0x0005
#undef GL_TRIANGLE_FAN
static const GLenum GL_TRIANGLE_FAN=0x0006
#undef GL_MAP_INVALIDATE_BUFFER_BIT
static const GLenum GL_MAP_INVALIDATE_BUFFER_BIT=0x0008
#undef GL_MAP_FLUSH_EXPLICIT_BIT
static const GLenum GL_MAP_FLUSH_EXPLICIT_BIT=0x0010
#undef GL_MAP_UNSYNCHRONIZED_BIT
static const GLenum GL_MAP_UNSYNCHRONIZED_BIT=0x0020
#undef GL_NEVER
static const GLenum GL_NEVER=0x0200
#undef GL_LESS
static const GLenum GL_LESS=0x0201
#undef GL_EQUAL
static const GLenum GL_EQUAL=0x0202
#undef GL_LEQUAL
static const GLenum GL_LEQUAL=0x0203
#undef GL_GREATER
static const GLenum GL_GREATER=0x0204
#undef GL_NOTEQUAL
static const GLenum GL_NOTEQUAL=0x0205
#undef GL_GEQUAL
static const GLenum GL_GEQUAL=0x0206
#undef GL_ALWAYS
static const GLenum GL_ALWAYS=0x0207
#undef GL_SRC_COLOR
static const GLenum GL_SRC_COLOR=0x0300
#undef GL_ONE_MINUS_SRC_COLOR
static const GLenum GL_ONE_MINUS_SRC_COLOR=0x0301
#undef GL_SRC_ALPHA
static const GLenum GL_SRC_ALPHA=0x0302
#undef GL_ONE_MINUS_SRC_ALPHA
static const GLenum GL_ONE_MINUS_SRC_ALPHA=0x0303
#undef GL_DST_ALPHA
static const GLenum GL_DST_ALPHA=0x0304
#undef GL_ONE_MINUS_DST_ALPHA
static const GLenum GL_ONE_MINUS_DST_ALPHA=0x0305
#undef GL_DST_COLOR
static const GLenum GL_DST_COLOR=0x0306
#undef GL_ONE_MINUS_DST_COLOR
static const GLenum GL_ONE_MINUS_DST_COLOR=0x0307
#undef GL_SRC_ALPHA_SATURATE
static const GLenum GL_SRC_ALPHA_SATURATE=0x0308
#undef GL_FRONT
static const GLenum GL_FRONT=0x0404
#undef GL_BACK
static const GLenum GL_BACK=0x0405
#undef GL_FRONT_AND_BACK
static const GLenum GL_FRONT_AND_BACK=0x0408
#undef GL_INVALID_ENUM
static const GLenum GL_INVALID_ENUM=0x0500
#undef GL_INVALID_VALUE
static const GLenum GL_INVALID_VALUE=0x0501
#undef GL_INVALID_OPERATION
static const GLenum GL_INVALID_OPERATION=0x0502
#undef GL_OUT_OF_MEMORY
static const GLenum GL_OUT_OF_MEMORY=0x0505
#undef GL_INVALID_FRAMEBUFFER_OPERATION
static const GLenum GL_INVALID_FRAMEBUFFER_OPERATION=0x0506
#undef GL_CW
static const GLenum GL_CW=0x0900
#undef GL_CCW
static const GLenum GL_CCW=0x0901
#undef GL_LINE_WIDTH
static const GLenum GL_LINE_WIDTH=0x0B21
#undef GL_CULL_FACE
static const GLenum GL_CULL_FACE=0x0B44
#undef GL_CULL_FACE_MODE
static const GLenum GL_CULL_FACE_MODE=0x0B45
#undef GL_FRONT_FACE
static const GLenum GL_FRONT_FACE=0x0B46
#undef GL_DEPTH_RANGE
static const GLenum GL_DEPTH_RANGE=0x0B70
#undef GL_DEPTH_TEST
static const GLenum GL_DEPTH_TEST=0x0B71
#undef GL_DEPTH_WRITEMASK
static const GLenum GL_DEPTH_WRITEMASK=0x0B72
#undef GL_DEPTH_CLEAR_VALUE
static const GLenum GL_DEPTH_CLEAR_VALUE=0x0B73
#undef GL_DEPTH_FUNC
static const GLenum GL_DEPTH_FUNC=0x0B74
#undef GL_STENCIL_TEST
static const GLenum GL_STENCIL_TEST=0x0B90
#undef GL_STENCIL_CLEAR_VALUE
static const GLenum GL_STENCIL_CLEAR_VALUE=0x0B91
#undef GL_STENCIL_FUNC
static const GLenum GL_STENCIL_FUNC=0x0B92
#undef GL_STENCIL_VALUE_MASK
static const GLenum GL_STENCIL_VALUE_MASK=0x0B93
#undef GL_STENCIL_FAIL
static const GLenum GL_STENCIL_FAIL=0x0B94
#undef GL_STENCIL_PASS_DEPTH_FAIL
static const GLenum GL_STENCIL_PASS_DEPTH_FAIL=0x0B95
#undef GL_STENCIL_PASS_DEPTH_PASS
static const GLenum GL_STENCIL_PASS_DEPTH_PASS=0x0B96
#undef GL_STENCIL_REF
static const GLenum GL_STENCIL_REF=0x0B97
#undef GL_STENCIL_WRITEMASK
static const GLenum GL_STENCIL_WRITEMASK=0x0B98
#undef GL_VIEWPORT
static const GLenum GL_VIEWPORT=0x0BA2
#undef GL_DITHER
static const GLenum GL_DITHER=0x0BD0
#undef GL_BLEND
static const GLenum GL_BLEND=0x0BE2
#undef GL_READ_BUFFER
static const GLenum GL_READ_BUFFER=0x0C02
#undef GL_SCISSOR_BOX
static const GLenum GL_SCISSOR_BOX=0x0C10
#undef GL_SCISSOR_TEST
static const GLenum GL_SCISSOR_TEST=0x0C11
#undef GL_COLOR_CLEAR_VALUE
static const GLenum GL_COLOR_CLEAR_VALUE=0x0C22
#undef GL_COLOR_WRITEMASK
static const GLenum GL_COLOR_WRITEMASK=0x0C23
#undef GL_UNPACK_ROW_LENGTH
static const GLenum GL_UNPACK_ROW_LENGTH=0x0CF2
#undef GL_UNPACK_SKIP_ROWS
static const GLenum GL_UNPACK_SKIP_ROWS=0x0CF3
#undef GL_UNPACK_SKIP_PIXELS
static const GLenum GL_UNPACK_SKIP_PIXELS=0x0CF4
#undef GL_UNPACK_ALIGNMENT
static const GLenum GL_UNPACK_ALIGNMENT=0x0CF5
#undef GL_PACK_ROW_LENGTH
static const GLenum GL_PACK_ROW_LENGTH=0x0D02
#undef GL_PACK_SKIP_ROWS
static const GLenum GL_PACK_SKIP_ROWS=0x0D03
#undef GL_PACK_SKIP_PIXELS
static const GLenum GL_PACK_SKIP_PIXELS=0x0D04
#undef GL_PACK_ALIGNMENT
static const GLenum GL_PACK_ALIGNMENT=0x0D05
#undef GL_MAX_TEXTURE_SIZE
static const GLenum GL_MAX_TEXTURE_SIZE=0x0D33
#undef GL_MAX_VIEWPORT_DIMS
static const GLenum GL_MAX_VIEWPORT_DIMS=0x0D3A
#undef GL_SUBPIXEL_BITS
static const GLenum GL_SUBPIXEL_BITS=0x0D50
#undef GL_RED_BITS
static const GLenum GL_RED_BITS=0x0D52
#undef GL_GREEN_BITS
static const GLenum GL_GREEN_BITS=0x0D53
#undef GL_BLUE_BITS
static const GLenum GL_BLUE_BITS=0x0D54
#undef GL_ALPHA_BITS
static const GLenum GL_ALPHA_BITS=0x0D55
#undef GL_DEPTH_BITS
static const GLenum GL_DEPTH_BITS=0x0D56
#undef GL_STENCIL_BITS
static const GLenum GL_STENCIL_BITS=0x0D57
#undef GL_TEXTURE_2D
static const GLenum GL_TEXTURE_2D=0x0DE1
#undef GL_TEXTURE_WIDTH
static const GLenum GL_TEXTURE_WIDTH=0x1000
#undef GL_TEXTURE_HEIGHT
static const GLenum GL_TEXTURE_HEIGHT=0x1001
#undef GL_TEXTURE_INTERNAL_FORMAT
static const GLenum GL_TEXTURE_INTERNAL_FORMAT=0x1003
#undef GL_DONT_CARE
static const GLenum GL_DONT_CARE=0x1100
#undef GL_FASTEST
static const GLenum GL_FASTEST=0x1101
#undef GL_NICEST
static const GLenum GL_NICEST=0x1102
#undef GL_BYTE
static const GLenum GL_BYTE=0x1400
#undef GL_UNSIGNED_BYTE
static const GLenum GL_UNSIGNED_BYTE=0x1401
#undef GL_SHORT
static const GLenum GL_SHORT=0x1402
#undef GL_UNSIGNED_SHORT
static const GLenum GL_UNSIGNED_SHORT=0x1403
#undef GL_INT
static const GLenum GL_INT=0x1404
#undef GL_UNSIGNED_INT
static const GLenum GL_UNSIGNED_INT=0x1405
#undef GL_FLOAT
static const GLenum GL_FLOAT=0x1406
#undef GL_HALF_FLOAT
static const GLenum GL_HALF_FLOAT=0x140B
#undef GL_FIXED
static const GLenum GL_FIXED=0x140C
#undef GL_INVERT
static const GLenum GL_INVERT=0x150A
#undef GL_TEXTURE
static const GLenum GL_TEXTURE=0x1702
#undef GL_COLOR
static const GLenum GL_COLOR=0x1800
#undef GL_DEPTH
static const GLenum GL_DEPTH=0x1801
#undef GL_STENCIL
static const GLenum GL_STENCIL=0x1802
#undef GL_STENCIL_INDEX
static const GLenum GL_STENCIL_INDEX=0x1901
#undef GL_DEPTH_COMPONENT
static const GLenum GL_DEPTH_COMPONENT=0x1902
#undef GL_RED
static const GLenum GL_RED=0x1903
#undef GL_GREEN
static const GLenum GL_GREEN=0x1904
#undef GL_BLUE
static const GLenum GL_BLUE=0x1905
#undef GL_ALPHA
static const GLenum GL_ALPHA=0x1906
#undef GL_RGB
static const GLenum GL_RGB=0x1907
#undef GL_RGBA
static const GLenum GL_RGBA=0x1908
#undef GL_LUMINANCE
static const GLenum GL_LUMINANCE=0x1909
#undef GL_LUMINANCE_ALPHA
static const GLenum GL_LUMINANCE_ALPHA=0x190A
#undef GL_KEEP
static const GLenum GL_KEEP=0x1E00
#undef GL_REPLACE
static const GLenum GL_REPLACE=0x1E01
#undef GL_INCR
static const GLenum GL_INCR=0x1E02
#undef GL_DECR
static const GLenum GL_DECR=0x1E03
#undef GL_VENDOR
static const GLenum GL_VENDOR=0x1F00
#undef GL_RENDERER
static const GLenum GL_RENDERER=0x1F01
#undef GL_VERSION
static const GLenum GL_VERSION=0x1F02
#undef GL_EXTENSIONS
static const GLenum GL_EXTENSIONS=0x1F03
#undef GL_NEAREST
static const GLenum GL_NEAREST=0x2600
#undef GL_LINEAR
static const GLenum GL_LINEAR=0x2601
#undef GL_NEAREST_MIPMAP_NEAREST
static const GLenum GL_NEAREST_MIPMAP_NEAREST=0x2700
#undef GL_LINEAR_MIPMAP_NEAREST
static const GLenum GL_LINEAR_MIPMAP_NEAREST=0x2701
#undef GL_NEAREST_MIPMAP_LINEAR
static const GLenum GL_NEAREST_MIPMAP_LINEAR=0x2702
#undef GL_LINEAR_MIPMAP_LINEAR
static const GLenum GL_LINEAR_MIPMAP_LINEAR=0x2703
#undef GL_TEXTURE_MAG_FILTER
static const GLenum GL_TEXTURE_MAG_FILTER=0x2800
#undef GL_TEXTURE_MIN_FILTER
static const GLenum GL_TEXTURE_MIN_FILTER=0x2801
#undef GL_TEXTURE_WRAP_S
static const GLenum GL_TEXTURE_WRAP_S=0x2802
#undef GL_TEXTURE_WRAP_T
static const GLenum GL_TEXTURE_WRAP_T=0x2803
#undef GL_REPEAT
static const GLenum GL_REPEAT=0x2901
#undef GL_POLYGON_OFFSET_UNITS
static const GLenum GL_POLYGON_OFFSET_UNITS=0x2A00
#undef GL_CONSTANT_COLOR
static const GLenum GL_CONSTANT_COLOR=0x8001
#undef GL_ONE_MINUS_CONSTANT_COLOR
static const GLenum GL_ONE_MINUS_CONSTANT_COLOR=0x8002
#undef GL_CONSTANT_ALPHA
static const GLenum GL_CONSTANT_ALPHA=0x8003
#undef GL_ONE_MINUS_CONSTANT_ALPHA
static const GLenum GL_ONE_MINUS_CONSTANT_ALPHA=0x8004
#undef GL_BLEND_COLOR
static const GLenum GL_BLEND_COLOR=0x8005
#undef GL_FUNC_ADD
static const GLenum GL_FUNC_ADD=0x8006
#undef GL_MIN
static const GLenum GL_MIN=0x8007
#undef GL_MAX
static const GLenum GL_MAX=0x8008
#undef GL_BLEND_EQUATION_RGB
static const GLenum GL_BLEND_EQUATION_RGB=0x8009
#undef GL_BLEND_EQUATION
static const GLenum GL_BLEND_EQUATION=0x8009
#undef GL_FUNC_SUBTRACT
static const GLenum GL_FUNC_SUBTRACT=0x800A
#undef GL_FUNC_REVERSE_SUBTRACT
static const GLenum GL_FUNC_REVERSE_SUBTRACT=0x800B
#undef GL_UNSIGNED_SHORT_4_4_4_4
static const GLenum GL_UNSIGNED_SHORT_4_4_4_4=0x8033
#undef GL_UNSIGNED_SHORT_5_5_5_1
static const GLenum GL_UNSIGNED_SHORT_5_5_5_1=0x8034
#undef GL_POLYGON_OFFSET_FILL
static const GLenum GL_POLYGON_OFFSET_FILL=0x8037
#undef GL_POLYGON_OFFSET_FACTOR
static const GLenum GL_POLYGON_OFFSET_FACTOR=0x8038
#undef GL_RGB8
static const GLenum GL_RGB8=0x8051
#undef GL_RGBA4
static const GLenum GL_RGBA4=0x8056
#undef GL_RGB5_A1
static const GLenum GL_RGB5_A1=0x8057
#undef GL_RGBA8
static const GLenum GL_RGBA8=0x8058
#undef GL_RGB10_A2
static const GLenum GL_RGB10_A2=0x8059
#undef GL_TEXTURE_RED_SIZE
static const GLenum GL_TEXTURE_RED_SIZE=0x805C
#undef GL_TEXTURE_GREEN_SIZE
static const GLenum GL_TEXTURE_GREEN_SIZE=0x805D
#undef GL_TEXTURE_BLUE_SIZE
static const GLenum GL_TEXTURE_BLUE_SIZE=0x805E
#undef GL_TEXTURE_ALPHA_SIZE
static const GLenum GL_TEXTURE_ALPHA_SIZE=0x805F
#undef GL_TEXTURE_BINDING_2D
static const GLenum GL_TEXTURE_BINDING_2D=0x8069
#undef GL_TEXTURE_BINDING_3D
static const GLenum GL_TEXTURE_BINDING_3D=0x806A
#undef GL_UNPACK_SKIP_IMAGES
static const GLenum GL_UNPACK_SKIP_IMAGES=0x806D
#undef GL_UNPACK_IMAGE_HEIGHT
static const GLenum GL_UNPACK_IMAGE_HEIGHT=0x806E
#undef GL_TEXTURE_3D
static const GLenum GL_TEXTURE_3D=0x806F
#undef GL_TEXTURE_DEPTH
static const GLenum GL_TEXTURE_DEPTH=0x8071
#undef GL_TEXTURE_WRAP_R
static const GLenum GL_TEXTURE_WRAP_R=0x8072
#undef GL_MAX_3D_TEXTURE_SIZE
static const GLenum GL_MAX_3D_TEXTURE_SIZE=0x8073
#undef GL_SAMPLE_ALPHA_TO_COVERAGE
static const GLenum GL_SAMPLE_ALPHA_TO_COVERAGE=0x809E
#undef GL_SAMPLE_COVERAGE
static const GLenum GL_SAMPLE_COVERAGE=0x80A0
#undef GL_SAMPLE_BUFFERS
static const GLenum GL_SAMPLE_BUFFERS=0x80A8
#undef GL_SAMPLES
static const GLenum GL_SAMPLES=0x80A9
#undef GL_SAMPLE_COVERAGE_VALUE
static const GLenum GL_SAMPLE_COVERAGE_VALUE=0x80AA
#undef GL_SAMPLE_COVERAGE_INVERT
static const GLenum GL_SAMPLE_COVERAGE_INVERT=0x80AB
#undef GL_BLEND_DST_RGB
static const GLenum GL_BLEND_DST_RGB=0x80C8
#undef GL_BLEND_SRC_RGB
static const GLenum GL_BLEND_SRC_RGB=0x80C9
#undef GL_BLEND_DST_ALPHA
static const GLenum GL_BLEND_DST_ALPHA=0x80CA
#undef GL_BLEND_SRC_ALPHA
static const GLenum GL_BLEND_SRC_ALPHA=0x80CB
#undef GL_MAX_ELEMENTS_VERTICES
static const GLenum GL_MAX_ELEMENTS_VERTICES=0x80E8
#undef GL_MAX_ELEMENTS_INDICES
static const GLenum GL_MAX_ELEMENTS_INDICES=0x80E9
#undef GL_CLAMP_TO_EDGE
static const GLenum GL_CLAMP_TO_EDGE=0x812F
#undef GL_TEXTURE_MIN_LOD
static const GLenum GL_TEXTURE_MIN_LOD=0x813A
#undef GL_TEXTURE_MAX_LOD
static const GLenum GL_TEXTURE_MAX_LOD=0x813B
#undef GL_TEXTURE_BASE_LEVEL
static const GLenum GL_TEXTURE_BASE_LEVEL=0x813C
#undef GL_TEXTURE_MAX_LEVEL
static const GLenum GL_TEXTURE_MAX_LEVEL=0x813D
#undef GL_GENERATE_MIPMAP_HINT
static const GLenum GL_GENERATE_MIPMAP_HINT=0x8192
#undef GL_DEPTH_COMPONENT16
static const GLenum GL_DEPTH_COMPONENT16=0x81A5
#undef GL_DEPTH_COMPONENT24
static const GLenum GL_DEPTH_COMPONENT24=0x81A6
#undef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING=0x8210
#undef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE=0x8211
#undef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE=0x8212
#undef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE=0x8213
#undef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE=0x8214
#undef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE=0x8215
#undef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE=0x8216
#undef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE=0x8217
#undef GL_FRAMEBUFFER_DEFAULT
static const GLenum GL_FRAMEBUFFER_DEFAULT=0x8218
#undef GL_FRAMEBUFFER_UNDEFINED
static const GLenum GL_FRAMEBUFFER_UNDEFINED=0x8219
#undef GL_DEPTH_STENCIL_ATTACHMENT
static const GLenum GL_DEPTH_STENCIL_ATTACHMENT=0x821A
#undef GL_MAJOR_VERSION
static const GLenum GL_MAJOR_VERSION=0x821B
#undef GL_MINOR_VERSION
static const GLenum GL_MINOR_VERSION=0x821C
#undef GL_NUM_EXTENSIONS
static const GLenum GL_NUM_EXTENSIONS=0x821D
#undef GL_RG
static const GLenum GL_RG=0x8227
#undef GL_RG_INTEGER
static const GLenum GL_RG_INTEGER=0x8228
#undef GL_R8
static const GLenum GL_R8=0x8229
#undef GL_RG8
static const GLenum GL_RG8=0x822B
#undef GL_R16F
static const GLenum GL_R16F=0x822D
#undef GL_R32F
static const GLenum GL_R32F=0x822E
#undef GL_RG16F
static const GLenum GL_RG16F=0x822F
#undef GL_RG32F
static const GLenum GL_RG32F=0x8230
#undef GL_R8I
static const GLenum GL_R8I=0x8231
#undef GL_R8UI
static const GLenum GL_R8UI=0x8232
#undef GL_R16I
static const GLenum GL_R16I=0x8233
#undef GL_R16UI
static const GLenum GL_R16UI=0x8234
#undef GL_R32I
static const GLenum GL_R32I=0x8235
#undef GL_R32UI
static const GLenum GL_R32UI=0x8236
#undef GL_RG8I
static const GLenum GL_RG8I=0x8237
#undef GL_RG8UI
static const GLenum GL_RG8UI=0x8238
#undef GL_RG16I
static const GLenum GL_RG16I=0x8239
#undef GL_RG16UI
static const GLenum GL_RG16UI=0x823A
#undef GL_RG32I
static const GLenum GL_RG32I=0x823B
#undef GL_RG32UI
static const GLenum GL_RG32UI=0x823C
#undef GL_PROGRAM_BINARY_RETRIEVABLE_HINT
static const GLenum GL_PROGRAM_BINARY_RETRIEVABLE_HINT=0x8257
#undef GL_PROGRAM_SEPARABLE
static const GLenum GL_PROGRAM_SEPARABLE=0x8258
#undef GL_ACTIVE_PROGRAM
static const GLenum GL_ACTIVE_PROGRAM=0x8259
#undef GL_PROGRAM_PIPELINE_BINDING
static const GLenum GL_PROGRAM_PIPELINE_BINDING=0x825A
#undef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
static const GLenum GL_MAX_COMPUTE_SHARED_MEMORY_SIZE=0x8262
#undef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
static const GLenum GL_MAX_COMPUTE_UNIFORM_COMPONENTS=0x8263
#undef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
static const GLenum GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS=0x8264
#undef GL_MAX_COMPUTE_ATOMIC_COUNTERS
static const GLenum GL_MAX_COMPUTE_ATOMIC_COUNTERS=0x8265
#undef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
static const GLenum GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS=0x8266
#undef GL_COMPUTE_WORK_GROUP_SIZE
static const GLenum GL_COMPUTE_WORK_GROUP_SIZE=0x8267
#undef GL_MAX_UNIFORM_LOCATIONS
static const GLenum GL_MAX_UNIFORM_LOCATIONS=0x826E
#undef GL_VERTEX_ATTRIB_BINDING
static const GLenum GL_VERTEX_ATTRIB_BINDING=0x82D4
#undef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
static const GLenum GL_VERTEX_ATTRIB_RELATIVE_OFFSET=0x82D5
#undef GL_VERTEX_BINDING_DIVISOR
static const GLenum GL_VERTEX_BINDING_DIVISOR=0x82D6
#undef GL_VERTEX_BINDING_OFFSET
static const GLenum GL_VERTEX_BINDING_OFFSET=0x82D7
#undef GL_VERTEX_BINDING_STRIDE
static const GLenum GL_VERTEX_BINDING_STRIDE=0x82D8
#undef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
static const GLenum GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET=0x82D9
#undef GL_MAX_VERTEX_ATTRIB_BINDINGS
static const GLenum GL_MAX_VERTEX_ATTRIB_BINDINGS=0x82DA
#undef GL_TEXTURE_IMMUTABLE_LEVELS
static const GLenum GL_TEXTURE_IMMUTABLE_LEVELS=0x82DF
#undef GL_MAX_VERTEX_ATTRIB_STRIDE
static const GLenum GL_MAX_VERTEX_ATTRIB_STRIDE=0x82E5
#undef GL_UNSIGNED_SHORT_5_6_5
static const GLenum GL_UNSIGNED_SHORT_5_6_5=0x8363
#undef GL_UNSIGNED_INT_2_10_10_10_REV
static const GLenum GL_UNSIGNED_INT_2_10_10_10_REV=0x8368
#undef GL_MIRRORED_REPEAT
static const GLenum GL_MIRRORED_REPEAT=0x8370
#undef GL_ALIASED_POINT_SIZE_RANGE
static const GLenum GL_ALIASED_POINT_SIZE_RANGE=0x846D
#undef GL_ALIASED_LINE_WIDTH_RANGE
static const GLenum GL_ALIASED_LINE_WIDTH_RANGE=0x846E
#undef GL_TEXTURE0
static const GLenum GL_TEXTURE0=0x84C0
#undef GL_TEXTURE1
static const GLenum GL_TEXTURE1=0x84C1
#undef GL_TEXTURE2
static const GLenum GL_TEXTURE2=0x84C2
#undef GL_TEXTURE3
static const GLenum GL_TEXTURE3=0x84C3
#undef GL_TEXTURE4
static const GLenum GL_TEXTURE4=0x84C4
#undef GL_TEXTURE5
static const GLenum GL_TEXTURE5=0x84C5
#undef GL_TEXTURE6
static const GLenum GL_TEXTURE6=0x84C6
#undef GL_TEXTURE7
static const GLenum GL_TEXTURE7=0x84C7
#undef GL_TEXTURE8
static const GLenum GL_TEXTURE8=0x84C8
#undef GL_TEXTURE9
static const GLenum GL_TEXTURE9=0x84C9
#undef GL_TEXTURE10
static const GLenum GL_TEXTURE10=0x84CA
#undef GL_TEXTURE11
static const GLenum GL_TEXTURE11=0x84CB
#undef GL_TEXTURE12
static const GLenum GL_TEXTURE12=0x84CC
#undef GL_TEXTURE13
static const GLenum GL_TEXTURE13=0x84CD
#undef GL_TEXTURE14
static const GLenum GL_TEXTURE14=0x84CE
#undef GL_TEXTURE15
static const GLenum GL_TEXTURE15=0x84CF
#undef GL_TEXTURE16
static const GLenum GL_TEXTURE16=0x84D0
#undef GL_TEXTURE17
static const GLenum GL_TEXTURE17=0x84D1
#undef GL_TEXTURE18
static const GLenum GL_TEXTURE18=0x84D2
#undef GL_TEXTURE19
static const GLenum GL_TEXTURE19=0x84D3
#undef GL_TEXTURE20
static const GLenum GL_TEXTURE20=0x84D4
#undef GL_TEXTURE21
static const GLenum GL_TEXTURE21=0x84D5
#undef GL_TEXTURE22
static const GLenum GL_TEXTURE22=0x84D6
#undef GL_TEXTURE23
static const GLenum GL_TEXTURE23=0x84D7
#undef GL_TEXTURE24
static const GLenum GL_TEXTURE24=0x84D8
#undef GL_TEXTURE25
static const GLenum GL_TEXTURE25=0x84D9
#undef GL_TEXTURE26
static const GLenum GL_TEXTURE26=0x84DA
#undef GL_TEXTURE27
static const GLenum GL_TEXTURE27=0x84DB
#undef GL_TEXTURE28
static const GLenum GL_TEXTURE28=0x84DC
#undef GL_TEXTURE29
static const GLenum GL_TEXTURE29=0x84DD
#undef GL_TEXTURE30
static const GLenum GL_TEXTURE30=0x84DE
#undef GL_TEXTURE31
static const GLenum GL_TEXTURE31=0x84DF
#undef GL_ACTIVE_TEXTURE
static const GLenum GL_ACTIVE_TEXTURE=0x84E0
#undef GL_MAX_RENDERBUFFER_SIZE
static const GLenum GL_MAX_RENDERBUFFER_SIZE=0x84E8
#undef GL_DEPTH_STENCIL
static const GLenum GL_DEPTH_STENCIL=0x84F9
#undef GL_UNSIGNED_INT_24_8
static const GLenum GL_UNSIGNED_INT_24_8=0x84FA
#undef GL_MAX_TEXTURE_LOD_BIAS
static const GLenum GL_MAX_TEXTURE_LOD_BIAS=0x84FD
#undef GL_INCR_WRAP
static const GLenum GL_INCR_WRAP=0x8507
#undef GL_DECR_WRAP
static const GLenum GL_DECR_WRAP=0x8508
#undef GL_TEXTURE_CUBE_MAP
static const GLenum GL_TEXTURE_CUBE_MAP=0x8513
#undef GL_TEXTURE_BINDING_CUBE_MAP
static const GLenum GL_TEXTURE_BINDING_CUBE_MAP=0x8514
#undef GL_TEXTURE_CUBE_MAP_POSITIVE_X
static const GLenum GL_TEXTURE_CUBE_MAP_POSITIVE_X=0x8515
#undef GL_TEXTURE_CUBE_MAP_NEGATIVE_X
static const GLenum GL_TEXTURE_CUBE_MAP_NEGATIVE_X=0x8516
#undef GL_TEXTURE_CUBE_MAP_POSITIVE_Y
static const GLenum GL_TEXTURE_CUBE_MAP_POSITIVE_Y=0x8517
#undef GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
static const GLenum GL_TEXTURE_CUBE_MAP_NEGATIVE_Y=0x8518
#undef GL_TEXTURE_CUBE_MAP_POSITIVE_Z
static const GLenum GL_TEXTURE_CUBE_MAP_POSITIVE_Z=0x8519
#undef GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
static const GLenum GL_TEXTURE_CUBE_MAP_NEGATIVE_Z=0x851A
#undef GL_MAX_CUBE_MAP_TEXTURE_SIZE
static const GLenum GL_MAX_CUBE_MAP_TEXTURE_SIZE=0x851C
#undef GL_VERTEX_ARRAY_BINDING
static const GLenum GL_VERTEX_ARRAY_BINDING=0x85B5
#undef GL_VERTEX_ATTRIB_ARRAY_ENABLED
static const GLenum GL_VERTEX_ATTRIB_ARRAY_ENABLED=0x8622
#undef GL_VERTEX_ATTRIB_ARRAY_SIZE
static const GLenum GL_VERTEX_ATTRIB_ARRAY_SIZE=0x8623
#undef GL_VERTEX_ATTRIB_ARRAY_STRIDE
static const GLenum GL_VERTEX_ATTRIB_ARRAY_STRIDE=0x8624
#undef GL_VERTEX_ATTRIB_ARRAY_TYPE
static const GLenum GL_VERTEX_ATTRIB_ARRAY_TYPE=0x8625
#undef GL_CURRENT_VERTEX_ATTRIB
static const GLenum GL_CURRENT_VERTEX_ATTRIB=0x8626
#undef GL_VERTEX_ATTRIB_ARRAY_POINTER
static const GLenum GL_VERTEX_ATTRIB_ARRAY_POINTER=0x8645
#undef GL_TEXTURE_COMPRESSED
static const GLenum GL_TEXTURE_COMPRESSED=0x86A1
#undef GL_NUM_COMPRESSED_TEXTURE_FORMATS
static const GLenum GL_NUM_COMPRESSED_TEXTURE_FORMATS=0x86A2
#undef GL_COMPRESSED_TEXTURE_FORMATS
static const GLenum GL_COMPRESSED_TEXTURE_FORMATS=0x86A3
#undef GL_PROGRAM_BINARY_LENGTH
static const GLenum GL_PROGRAM_BINARY_LENGTH=0x8741
#undef GL_BUFFER_SIZE
static const GLenum GL_BUFFER_SIZE=0x8764
#undef GL_BUFFER_USAGE
static const GLenum GL_BUFFER_USAGE=0x8765
#undef GL_NUM_PROGRAM_BINARY_FORMATS
static const GLenum GL_NUM_PROGRAM_BINARY_FORMATS=0x87FE
#undef GL_PROGRAM_BINARY_FORMATS
static const GLenum GL_PROGRAM_BINARY_FORMATS=0x87FF
#undef GL_STENCIL_BACK_FUNC
static const GLenum GL_STENCIL_BACK_FUNC=0x8800
#undef GL_STENCIL_BACK_FAIL
static const GLenum GL_STENCIL_BACK_FAIL=0x8801
#undef GL_STENCIL_BACK_PASS_DEPTH_FAIL
static const GLenum GL_STENCIL_BACK_PASS_DEPTH_FAIL=0x8802
#undef GL_STENCIL_BACK_PASS_DEPTH_PASS
static const GLenum GL_STENCIL_BACK_PASS_DEPTH_PASS=0x8803
#undef GL_RGBA32F
static const GLenum GL_RGBA32F=0x8814
#undef GL_RGB32F
static const GLenum GL_RGB32F=0x8815
#undef GL_RGBA16F
static const GLenum GL_RGBA16F=0x881A
#undef GL_RGB16F
static const GLenum GL_RGB16F=0x881B
#undef GL_MAX_DRAW_BUFFERS
static const GLenum GL_MAX_DRAW_BUFFERS=0x8824
#undef GL_DRAW_BUFFER0
static const GLenum GL_DRAW_BUFFER0=0x8825
#undef GL_DRAW_BUFFER1
static const GLenum GL_DRAW_BUFFER1=0x8826
#undef GL_DRAW_BUFFER2
static const GLenum GL_DRAW_BUFFER2=0x8827
#undef GL_DRAW_BUFFER3
static const GLenum GL_DRAW_BUFFER3=0x8828
#undef GL_DRAW_BUFFER4
static const GLenum GL_DRAW_BUFFER4=0x8829
#undef GL_DRAW_BUFFER5
static const GLenum GL_DRAW_BUFFER5=0x882A
#undef GL_DRAW_BUFFER6
static const GLenum GL_DRAW_BUFFER6=0x882B
#undef GL_DRAW_BUFFER7
static const GLenum GL_DRAW_BUFFER7=0x882C
#undef GL_DRAW_BUFFER8
static const GLenum GL_DRAW_BUFFER8=0x882D
#undef GL_DRAW_BUFFER9
static const GLenum GL_DRAW_BUFFER9=0x882E
#undef GL_DRAW_BUFFER10
static const GLenum GL_DRAW_BUFFER10=0x882F
#undef GL_DRAW_BUFFER11
static const GLenum GL_DRAW_BUFFER11=0x8830
#undef GL_DRAW_BUFFER12
static const GLenum GL_DRAW_BUFFER12=0x8831
#undef GL_DRAW_BUFFER13
static const GLenum GL_DRAW_BUFFER13=0x8832
#undef GL_DRAW_BUFFER14
static const GLenum GL_DRAW_BUFFER14=0x8833
#undef GL_DRAW_BUFFER15
static const GLenum GL_DRAW_BUFFER15=0x8834
#undef GL_BLEND_EQUATION_ALPHA
static const GLenum GL_BLEND_EQUATION_ALPHA=0x883D
#undef GL_TEXTURE_DEPTH_SIZE
static const GLenum GL_TEXTURE_DEPTH_SIZE=0x884A
#undef GL_TEXTURE_COMPARE_MODE
static const GLenum GL_TEXTURE_COMPARE_MODE=0x884C
#undef GL_TEXTURE_COMPARE_FUNC
static const GLenum GL_TEXTURE_COMPARE_FUNC=0x884D
#undef GL_COMPARE_REF_TO_TEXTURE
static const GLenum GL_COMPARE_REF_TO_TEXTURE=0x884E
#undef GL_CURRENT_QUERY
static const GLenum GL_CURRENT_QUERY=0x8865
#undef GL_QUERY_RESULT
static const GLenum GL_QUERY_RESULT=0x8866
#undef GL_QUERY_RESULT_AVAILABLE
static const GLenum GL_QUERY_RESULT_AVAILABLE=0x8867
#undef GL_MAX_VERTEX_ATTRIBS
static const GLenum GL_MAX_VERTEX_ATTRIBS=0x8869
#undef GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
static const GLenum GL_VERTEX_ATTRIB_ARRAY_NORMALIZED=0x886A
#undef GL_MAX_TEXTURE_IMAGE_UNITS
static const GLenum GL_MAX_TEXTURE_IMAGE_UNITS=0x8872
#undef GL_ARRAY_BUFFER
static const GLenum GL_ARRAY_BUFFER=0x8892
#undef GL_ELEMENT_ARRAY_BUFFER
static const GLenum GL_ELEMENT_ARRAY_BUFFER=0x8893
#undef GL_ARRAY_BUFFER_BINDING
static const GLenum GL_ARRAY_BUFFER_BINDING=0x8894
#undef GL_ELEMENT_ARRAY_BUFFER_BINDING
static const GLenum GL_ELEMENT_ARRAY_BUFFER_BINDING=0x8895
#undef GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
static const GLenum GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING=0x889F
#undef GL_READ_ONLY
static const GLenum GL_READ_ONLY=0x88B8
#undef GL_WRITE_ONLY
static const GLenum GL_WRITE_ONLY=0x88B9
#undef GL_READ_WRITE
static const GLenum GL_READ_WRITE=0x88BA
#undef GL_BUFFER_MAPPED
static const GLenum GL_BUFFER_MAPPED=0x88BC
#undef GL_BUFFER_MAP_POINTER
static const GLenum GL_BUFFER_MAP_POINTER=0x88BD
#undef GL_STREAM_DRAW
static const GLenum GL_STREAM_DRAW=0x88E0
#undef GL_STREAM_READ
static const GLenum GL_STREAM_READ=0x88E1
#undef GL_STREAM_COPY
static const GLenum GL_STREAM_COPY=0x88E2
#undef GL_STATIC_DRAW
static const GLenum GL_STATIC_DRAW=0x88E4
#undef GL_STATIC_READ
static const GLenum GL_STATIC_READ=0x88E5
#undef GL_STATIC_COPY
static const GLenum GL_STATIC_COPY=0x88E6
#undef GL_DYNAMIC_DRAW
static const GLenum GL_DYNAMIC_DRAW=0x88E8
#undef GL_DYNAMIC_READ
static const GLenum GL_DYNAMIC_READ=0x88E9
#undef GL_DYNAMIC_COPY
static const GLenum GL_DYNAMIC_COPY=0x88EA
#undef GL_PIXEL_PACK_BUFFER
static const GLenum GL_PIXEL_PACK_BUFFER=0x88EB
#undef GL_PIXEL_UNPACK_BUFFER
static const GLenum GL_PIXEL_UNPACK_BUFFER=0x88EC
#undef GL_PIXEL_PACK_BUFFER_BINDING
static const GLenum GL_PIXEL_PACK_BUFFER_BINDING=0x88ED
#undef GL_PIXEL_UNPACK_BUFFER_BINDING
static const GLenum GL_PIXEL_UNPACK_BUFFER_BINDING=0x88EF
#undef GL_DEPTH24_STENCIL8
static const GLenum GL_DEPTH24_STENCIL8=0x88F0
#undef GL_TEXTURE_STENCIL_SIZE
static const GLenum GL_TEXTURE_STENCIL_SIZE=0x88F1
#undef GL_VERTEX_ATTRIB_ARRAY_INTEGER
static const GLenum GL_VERTEX_ATTRIB_ARRAY_INTEGER=0x88FD
#undef GL_VERTEX_ATTRIB_ARRAY_DIVISOR
static const GLenum GL_VERTEX_ATTRIB_ARRAY_DIVISOR=0x88FE
#undef GL_MAX_ARRAY_TEXTURE_LAYERS
static const GLenum GL_MAX_ARRAY_TEXTURE_LAYERS=0x88FF
#undef GL_MIN_PROGRAM_TEXEL_OFFSET
static const GLenum GL_MIN_PROGRAM_TEXEL_OFFSET=0x8904
#undef GL_MAX_PROGRAM_TEXEL_OFFSET
static const GLenum GL_MAX_PROGRAM_TEXEL_OFFSET=0x8905
#undef GL_SAMPLER_BINDING
static const GLenum GL_SAMPLER_BINDING=0x8919
#undef GL_UNIFORM_BUFFER
static const GLenum GL_UNIFORM_BUFFER=0x8A11
#undef GL_UNIFORM_BUFFER_BINDING
static const GLenum GL_UNIFORM_BUFFER_BINDING=0x8A28
#undef GL_UNIFORM_BUFFER_START
static const GLenum GL_UNIFORM_BUFFER_START=0x8A29
#undef GL_UNIFORM_BUFFER_SIZE
static const GLenum GL_UNIFORM_BUFFER_SIZE=0x8A2A
#undef GL_MAX_VERTEX_UNIFORM_BLOCKS
static const GLenum GL_MAX_VERTEX_UNIFORM_BLOCKS=0x8A2B
#undef GL_MAX_FRAGMENT_UNIFORM_BLOCKS
static const GLenum GL_MAX_FRAGMENT_UNIFORM_BLOCKS=0x8A2D
#undef GL_MAX_COMBINED_UNIFORM_BLOCKS
static const GLenum GL_MAX_COMBINED_UNIFORM_BLOCKS=0x8A2E
#undef GL_MAX_UNIFORM_BUFFER_BINDINGS
static const GLenum GL_MAX_UNIFORM_BUFFER_BINDINGS=0x8A2F
#undef GL_MAX_UNIFORM_BLOCK_SIZE
static const GLenum GL_MAX_UNIFORM_BLOCK_SIZE=0x8A30
#undef GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
static const GLenum GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS=0x8A31
#undef GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
static const GLenum GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS=0x8A33
#undef GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
static const GLenum GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT=0x8A34
#undef GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
static const GLenum GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH=0x8A35
#undef GL_ACTIVE_UNIFORM_BLOCKS
static const GLenum GL_ACTIVE_UNIFORM_BLOCKS=0x8A36
#undef GL_UNIFORM_TYPE
static const GLenum GL_UNIFORM_TYPE=0x8A37
#undef GL_UNIFORM_SIZE
static const GLenum GL_UNIFORM_SIZE=0x8A38
#undef GL_UNIFORM_NAME_LENGTH
static const GLenum GL_UNIFORM_NAME_LENGTH=0x8A39
#undef GL_UNIFORM_BLOCK_INDEX
static const GLenum GL_UNIFORM_BLOCK_INDEX=0x8A3A
#undef GL_UNIFORM_OFFSET
static const GLenum GL_UNIFORM_OFFSET=0x8A3B
#undef GL_UNIFORM_ARRAY_STRIDE
static const GLenum GL_UNIFORM_ARRAY_STRIDE=0x8A3C
#undef GL_UNIFORM_MATRIX_STRIDE
static const GLenum GL_UNIFORM_MATRIX_STRIDE=0x8A3D
#undef GL_UNIFORM_IS_ROW_MAJOR
static const GLenum GL_UNIFORM_IS_ROW_MAJOR=0x8A3E
#undef GL_UNIFORM_BLOCK_BINDING
static const GLenum GL_UNIFORM_BLOCK_BINDING=0x8A3F
#undef GL_UNIFORM_BLOCK_DATA_SIZE
static const GLenum GL_UNIFORM_BLOCK_DATA_SIZE=0x8A40
#undef GL_UNIFORM_BLOCK_NAME_LENGTH
static const GLenum GL_UNIFORM_BLOCK_NAME_LENGTH=0x8A41
#undef GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
static const GLenum GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS=0x8A42
#undef GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
static const GLenum GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES=0x8A43
#undef GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
static const GLenum GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER=0x8A44
#undef GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
static const GLenum GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER=0x8A46
#undef GL_FRAGMENT_SHADER
static const GLenum GL_FRAGMENT_SHADER=0x8B30
#undef GL_VERTEX_SHADER
static const GLenum GL_VERTEX_SHADER=0x8B31
#undef GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
static const GLenum GL_MAX_FRAGMENT_UNIFORM_COMPONENTS=0x8B49
#undef GL_MAX_VERTEX_UNIFORM_COMPONENTS
static const GLenum GL_MAX_VERTEX_UNIFORM_COMPONENTS=0x8B4A
#undef GL_MAX_VARYING_COMPONENTS
static const GLenum GL_MAX_VARYING_COMPONENTS=0x8B4B
#undef GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
static const GLenum GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS=0x8B4C
#undef GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
static const GLenum GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS=0x8B4D
#undef GL_SHADER_TYPE
static const GLenum GL_SHADER_TYPE=0x8B4F
#undef GL_FLOAT_VEC2
static const GLenum GL_FLOAT_VEC2=0x8B50
#undef GL_FLOAT_VEC3
static const GLenum GL_FLOAT_VEC3=0x8B51
#undef GL_FLOAT_VEC4
static const GLenum GL_FLOAT_VEC4=0x8B52
#undef GL_INT_VEC2
static const GLenum GL_INT_VEC2=0x8B53
#undef GL_INT_VEC3
static const GLenum GL_INT_VEC3=0x8B54
#undef GL_INT_VEC4
static const GLenum GL_INT_VEC4=0x8B55
#undef GL_BOOL
static const GLenum GL_BOOL=0x8B56
#undef GL_BOOL_VEC2
static const GLenum GL_BOOL_VEC2=0x8B57
#undef GL_BOOL_VEC3
static const GLenum GL_BOOL_VEC3=0x8B58
#undef GL_BOOL_VEC4
static const GLenum GL_BOOL_VEC4=0x8B59
#undef GL_FLOAT_MAT2
static const GLenum GL_FLOAT_MAT2=0x8B5A
#undef GL_FLOAT_MAT3
static const GLenum GL_FLOAT_MAT3=0x8B5B
#undef GL_FLOAT_MAT4
static const GLenum GL_FLOAT_MAT4=0x8B5C
#undef GL_SAMPLER_2D
static const GLenum GL_SAMPLER_2D=0x8B5E
#undef GL_SAMPLER_3D
static const GLenum GL_SAMPLER_3D=0x8B5F
#undef GL_SAMPLER_CUBE
static const GLenum GL_SAMPLER_CUBE=0x8B60
#undef GL_SAMPLER_2D_SHADOW
static const GLenum GL_SAMPLER_2D_SHADOW=0x8B62
#undef GL_FLOAT_MAT2x3
static const GLenum GL_FLOAT_MAT2x3=0x8B65
#undef GL_FLOAT_MAT2x4
static const GLenum GL_FLOAT_MAT2x4=0x8B66
#undef GL_FLOAT_MAT3x2
static const GLenum GL_FLOAT_MAT3x2=0x8B67
#undef GL_FLOAT_MAT3x4
static const GLenum GL_FLOAT_MAT3x4=0x8B68
#undef GL_FLOAT_MAT4x2
static const GLenum GL_FLOAT_MAT4x2=0x8B69
#undef GL_FLOAT_MAT4x3
static const GLenum GL_FLOAT_MAT4x3=0x8B6A
#undef GL_DELETE_STATUS
static const GLenum GL_DELETE_STATUS=0x8B80
#undef GL_COMPILE_STATUS
static const GLenum GL_COMPILE_STATUS=0x8B81
#undef GL_LINK_STATUS
static const GLenum GL_LINK_STATUS=0x8B82
#undef GL_VALIDATE_STATUS
static const GLenum GL_VALIDATE_STATUS=0x8B83
#undef GL_INFO_LOG_LENGTH
static const GLenum GL_INFO_LOG_LENGTH=0x8B84
#undef GL_ATTACHED_SHADERS
static const GLenum GL_ATTACHED_SHADERS=0x8B85
#undef GL_ACTIVE_UNIFORMS
static const GLenum GL_ACTIVE_UNIFORMS=0x8B86
#undef GL_ACTIVE_UNIFORM_MAX_LENGTH
static const GLenum GL_ACTIVE_UNIFORM_MAX_LENGTH=0x8B87
#undef GL_SHADER_SOURCE_LENGTH
static const GLenum GL_SHADER_SOURCE_LENGTH=0x8B88
#undef GL_ACTIVE_ATTRIBUTES
static const GLenum GL_ACTIVE_ATTRIBUTES=0x8B89
#undef GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
static const GLenum GL_ACTIVE_ATTRIBUTE_MAX_LENGTH=0x8B8A
#undef GL_FRAGMENT_SHADER_DERIVATIVE_HINT
static const GLenum GL_FRAGMENT_SHADER_DERIVATIVE_HINT=0x8B8B
#undef GL_SHADING_LANGUAGE_VERSION
static const GLenum GL_SHADING_LANGUAGE_VERSION=0x8B8C
#undef GL_CURRENT_PROGRAM
static const GLenum GL_CURRENT_PROGRAM=0x8B8D
#undef GL_IMPLEMENTATION_COLOR_READ_TYPE
static const GLenum GL_IMPLEMENTATION_COLOR_READ_TYPE=0x8B9A
#undef GL_IMPLEMENTATION_COLOR_READ_FORMAT
static const GLenum GL_IMPLEMENTATION_COLOR_READ_FORMAT=0x8B9B
#undef GL_TEXTURE_RED_TYPE
static const GLenum GL_TEXTURE_RED_TYPE=0x8C10
#undef GL_TEXTURE_GREEN_TYPE
static const GLenum GL_TEXTURE_GREEN_TYPE=0x8C11
#undef GL_TEXTURE_BLUE_TYPE
static const GLenum GL_TEXTURE_BLUE_TYPE=0x8C12
#undef GL_TEXTURE_ALPHA_TYPE
static const GLenum GL_TEXTURE_ALPHA_TYPE=0x8C13
#undef GL_TEXTURE_DEPTH_TYPE
static const GLenum GL_TEXTURE_DEPTH_TYPE=0x8C16
#undef GL_UNSIGNED_NORMALIZED
static const GLenum GL_UNSIGNED_NORMALIZED=0x8C17
#undef GL_TEXTURE_2D_ARRAY
static const GLenum GL_TEXTURE_2D_ARRAY=0x8C1A
#undef GL_TEXTURE_BINDING_2D_ARRAY
static const GLenum GL_TEXTURE_BINDING_2D_ARRAY=0x8C1D
#undef GL_ANY_SAMPLES_PASSED
static const GLenum GL_ANY_SAMPLES_PASSED=0x8C2F
#undef GL_R11F_G11F_B10F
static const GLenum GL_R11F_G11F_B10F=0x8C3A
#undef GL_UNSIGNED_INT_10F_11F_11F_REV
static const GLenum GL_UNSIGNED_INT_10F_11F_11F_REV=0x8C3B
#undef GL_RGB9_E5
static const GLenum GL_RGB9_E5=0x8C3D
#undef GL_UNSIGNED_INT_5_9_9_9_REV
static const GLenum GL_UNSIGNED_INT_5_9_9_9_REV=0x8C3E
#undef GL_TEXTURE_SHARED_SIZE
static const GLenum GL_TEXTURE_SHARED_SIZE=0x8C3F
#undef GL_SRGB
static const GLenum GL_SRGB=0x8C40
#undef GL_SRGB8
static const GLenum GL_SRGB8=0x8C41
#undef GL_SRGB8_ALPHA8
static const GLenum GL_SRGB8_ALPHA8=0x8C43
#undef GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
static const GLenum GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH=0x8C76
#undef GL_TRANSFORM_FEEDBACK_BUFFER_MODE
static const GLenum GL_TRANSFORM_FEEDBACK_BUFFER_MODE=0x8C7F
#undef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
static const GLenum GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS=0x8C80
#undef GL_TRANSFORM_FEEDBACK_VARYINGS
static const GLenum GL_TRANSFORM_FEEDBACK_VARYINGS=0x8C83
#undef GL_TRANSFORM_FEEDBACK_BUFFER_START
static const GLenum GL_TRANSFORM_FEEDBACK_BUFFER_START=0x8C84
#undef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE
static const GLenum GL_TRANSFORM_FEEDBACK_BUFFER_SIZE=0x8C85
#undef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
static const GLenum GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN=0x8C88
#undef GL_RASTERIZER_DISCARD
static const GLenum GL_RASTERIZER_DISCARD=0x8C89
#undef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
static const GLenum GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS=0x8C8A
#undef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
static const GLenum GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS=0x8C8B
#undef GL_INTERLEAVED_ATTRIBS
static const GLenum GL_INTERLEAVED_ATTRIBS=0x8C8C
#undef GL_SEPARATE_ATTRIBS
static const GLenum GL_SEPARATE_ATTRIBS=0x8C8D
#undef GL_TRANSFORM_FEEDBACK_BUFFER
static const GLenum GL_TRANSFORM_FEEDBACK_BUFFER=0x8C8E
#undef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
static const GLenum GL_TRANSFORM_FEEDBACK_BUFFER_BINDING=0x8C8F
#undef GL_STENCIL_BACK_REF
static const GLenum GL_STENCIL_BACK_REF=0x8CA3
#undef GL_STENCIL_BACK_VALUE_MASK
static const GLenum GL_STENCIL_BACK_VALUE_MASK=0x8CA4
#undef GL_STENCIL_BACK_WRITEMASK
static const GLenum GL_STENCIL_BACK_WRITEMASK=0x8CA5
#undef GL_DRAW_FRAMEBUFFER_BINDING
static const GLenum GL_DRAW_FRAMEBUFFER_BINDING=0x8CA6
#undef GL_FRAMEBUFFER_BINDING
static const GLenum GL_FRAMEBUFFER_BINDING=0x8CA6
#undef GL_RENDERBUFFER_BINDING
static const GLenum GL_RENDERBUFFER_BINDING=0x8CA7
#undef GL_READ_FRAMEBUFFER
static const GLenum GL_READ_FRAMEBUFFER=0x8CA8
#undef GL_DRAW_FRAMEBUFFER
static const GLenum GL_DRAW_FRAMEBUFFER=0x8CA9
#undef GL_READ_FRAMEBUFFER_BINDING
static const GLenum GL_READ_FRAMEBUFFER_BINDING=0x8CAA
#undef GL_RENDERBUFFER_SAMPLES
static const GLenum GL_RENDERBUFFER_SAMPLES=0x8CAB
#undef GL_DEPTH_COMPONENT32F
static const GLenum GL_DEPTH_COMPONENT32F=0x8CAC
#undef GL_DEPTH32F_STENCIL8
static const GLenum GL_DEPTH32F_STENCIL8=0x8CAD
#undef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE=0x8CD0
#undef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME=0x8CD1
#undef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL=0x8CD2
#undef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE=0x8CD3
#undef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER=0x8CD4
#undef GL_FRAMEBUFFER_COMPLETE
static const GLenum GL_FRAMEBUFFER_COMPLETE=0x8CD5
#undef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
static const GLenum GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT=0x8CD6
#undef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
static const GLenum GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT=0x8CD7
#undef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
static const GLenum GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS=0x8CD9
#undef GL_FRAMEBUFFER_UNSUPPORTED
static const GLenum GL_FRAMEBUFFER_UNSUPPORTED=0x8CDD
#undef GL_MAX_COLOR_ATTACHMENTS
static const GLenum GL_MAX_COLOR_ATTACHMENTS=0x8CDF
#undef GL_COLOR_ATTACHMENT0
static const GLenum GL_COLOR_ATTACHMENT0=0x8CE0
#undef GL_COLOR_ATTACHMENT1
static const GLenum GL_COLOR_ATTACHMENT1=0x8CE1
#undef GL_COLOR_ATTACHMENT2
static const GLenum GL_COLOR_ATTACHMENT2=0x8CE2
#undef GL_COLOR_ATTACHMENT3
static const GLenum GL_COLOR_ATTACHMENT3=0x8CE3
#undef GL_COLOR_ATTACHMENT4
static const GLenum GL_COLOR_ATTACHMENT4=0x8CE4
#undef GL_COLOR_ATTACHMENT5
static const GLenum GL_COLOR_ATTACHMENT5=0x8CE5
#undef GL_COLOR_ATTACHMENT6
static const GLenum GL_COLOR_ATTACHMENT6=0x8CE6
#undef GL_COLOR_ATTACHMENT7
static const GLenum GL_COLOR_ATTACHMENT7=0x8CE7
#undef GL_COLOR_ATTACHMENT8
static const GLenum GL_COLOR_ATTACHMENT8=0x8CE8
#undef GL_COLOR_ATTACHMENT9
static const GLenum GL_COLOR_ATTACHMENT9=0x8CE9
#undef GL_COLOR_ATTACHMENT10
static const GLenum GL_COLOR_ATTACHMENT10=0x8CEA
#undef GL_COLOR_ATTACHMENT11
static const GLenum GL_COLOR_ATTACHMENT11=0x8CEB
#undef GL_COLOR_ATTACHMENT12
static const GLenum GL_COLOR_ATTACHMENT12=0x8CEC
#undef GL_COLOR_ATTACHMENT13
static const GLenum GL_COLOR_ATTACHMENT13=0x8CED
#undef GL_COLOR_ATTACHMENT14
static const GLenum GL_COLOR_ATTACHMENT14=0x8CEE
#undef GL_COLOR_ATTACHMENT15
static const GLenum GL_COLOR_ATTACHMENT15=0x8CEF
#undef GL_DEPTH_ATTACHMENT
static const GLenum GL_DEPTH_ATTACHMENT=0x8D00
#undef GL_STENCIL_ATTACHMENT
static const GLenum GL_STENCIL_ATTACHMENT=0x8D20
#undef GL_FRAMEBUFFER
static const GLenum GL_FRAMEBUFFER=0x8D40
#undef GL_RENDERBUFFER
static const GLenum GL_RENDERBUFFER=0x8D41
#undef GL_RENDERBUFFER_WIDTH
static const GLenum GL_RENDERBUFFER_WIDTH=0x8D42
#undef GL_RENDERBUFFER_HEIGHT
static const GLenum GL_RENDERBUFFER_HEIGHT=0x8D43
#undef GL_RENDERBUFFER_INTERNAL_FORMAT
static const GLenum GL_RENDERBUFFER_INTERNAL_FORMAT=0x8D44
#undef GL_STENCIL_INDEX8
static const GLenum GL_STENCIL_INDEX8=0x8D48
#undef GL_RENDERBUFFER_RED_SIZE
static const GLenum GL_RENDERBUFFER_RED_SIZE=0x8D50
#undef GL_RENDERBUFFER_GREEN_SIZE
static const GLenum GL_RENDERBUFFER_GREEN_SIZE=0x8D51
#undef GL_RENDERBUFFER_BLUE_SIZE
static const GLenum GL_RENDERBUFFER_BLUE_SIZE=0x8D52
#undef GL_RENDERBUFFER_ALPHA_SIZE
static const GLenum GL_RENDERBUFFER_ALPHA_SIZE=0x8D53
#undef GL_RENDERBUFFER_DEPTH_SIZE
static const GLenum GL_RENDERBUFFER_DEPTH_SIZE=0x8D54
#undef GL_RENDERBUFFER_STENCIL_SIZE
static const GLenum GL_RENDERBUFFER_STENCIL_SIZE=0x8D55
#undef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
static const GLenum GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE=0x8D56
#undef GL_MAX_SAMPLES
static const GLenum GL_MAX_SAMPLES=0x8D57
#undef GL_RGB565
static const GLenum GL_RGB565=0x8D62
#undef GL_PRIMITIVE_RESTART_FIXED_INDEX
static const GLenum GL_PRIMITIVE_RESTART_FIXED_INDEX=0x8D69
#undef GL_ANY_SAMPLES_PASSED_CONSERVATIVE
static const GLenum GL_ANY_SAMPLES_PASSED_CONSERVATIVE=0x8D6A
#undef GL_MAX_ELEMENT_INDEX
static const GLenum GL_MAX_ELEMENT_INDEX=0x8D6B
#undef GL_RGBA32UI
static const GLenum GL_RGBA32UI=0x8D70
#undef GL_RGB32UI
static const GLenum GL_RGB32UI=0x8D71
#undef GL_RGBA16UI
static const GLenum GL_RGBA16UI=0x8D76
#undef GL_RGB16UI
static const GLenum GL_RGB16UI=0x8D77
#undef GL_RGBA8UI
static const GLenum GL_RGBA8UI=0x8D7C
#undef GL_RGB8UI
static const GLenum GL_RGB8UI=0x8D7D
#undef GL_RGBA32I
static const GLenum GL_RGBA32I=0x8D82
#undef GL_RGB32I
static const GLenum GL_RGB32I=0x8D83
#undef GL_RGBA16I
static const GLenum GL_RGBA16I=0x8D88
#undef GL_RGB16I
static const GLenum GL_RGB16I=0x8D89
#undef GL_RGBA8I
static const GLenum GL_RGBA8I=0x8D8E
#undef GL_RGB8I
static const GLenum GL_RGB8I=0x8D8F
#undef GL_RED_INTEGER
static const GLenum GL_RED_INTEGER=0x8D94
#undef GL_RGB_INTEGER
static const GLenum GL_RGB_INTEGER=0x8D98
#undef GL_RGBA_INTEGER
static const GLenum GL_RGBA_INTEGER=0x8D99
#undef GL_INT_2_10_10_10_REV
static const GLenum GL_INT_2_10_10_10_REV=0x8D9F
#undef GL_FLOAT_32_UNSIGNED_INT_24_8_REV
static const GLenum GL_FLOAT_32_UNSIGNED_INT_24_8_REV=0x8DAD
#undef GL_SAMPLER_2D_ARRAY
static const GLenum GL_SAMPLER_2D_ARRAY=0x8DC1
#undef GL_SAMPLER_2D_ARRAY_SHADOW
static const GLenum GL_SAMPLER_2D_ARRAY_SHADOW=0x8DC4
#undef GL_SAMPLER_CUBE_SHADOW
static const GLenum GL_SAMPLER_CUBE_SHADOW=0x8DC5
#undef GL_UNSIGNED_INT_VEC2
static const GLenum GL_UNSIGNED_INT_VEC2=0x8DC6
#undef GL_UNSIGNED_INT_VEC3
static const GLenum GL_UNSIGNED_INT_VEC3=0x8DC7
#undef GL_UNSIGNED_INT_VEC4
static const GLenum GL_UNSIGNED_INT_VEC4=0x8DC8
#undef GL_INT_SAMPLER_2D
static const GLenum GL_INT_SAMPLER_2D=0x8DCA
#undef GL_INT_SAMPLER_3D
static const GLenum GL_INT_SAMPLER_3D=0x8DCB
#undef GL_INT_SAMPLER_CUBE
static const GLenum GL_INT_SAMPLER_CUBE=0x8DCC
#undef GL_INT_SAMPLER_2D_ARRAY
static const GLenum GL_INT_SAMPLER_2D_ARRAY=0x8DCF
#undef GL_UNSIGNED_INT_SAMPLER_2D
static const GLenum GL_UNSIGNED_INT_SAMPLER_2D=0x8DD2
#undef GL_UNSIGNED_INT_SAMPLER_3D
static const GLenum GL_UNSIGNED_INT_SAMPLER_3D=0x8DD3
#undef GL_UNSIGNED_INT_SAMPLER_CUBE
static const GLenum GL_UNSIGNED_INT_SAMPLER_CUBE=0x8DD4
#undef GL_UNSIGNED_INT_SAMPLER_2D_ARRAY
static const GLenum GL_UNSIGNED_INT_SAMPLER_2D_ARRAY=0x8DD7
#undef GL_LOW_FLOAT
static const GLenum GL_LOW_FLOAT=0x8DF0
#undef GL_MEDIUM_FLOAT
static const GLenum GL_MEDIUM_FLOAT=0x8DF1
#undef GL_HIGH_FLOAT
static const GLenum GL_HIGH_FLOAT=0x8DF2
#undef GL_LOW_INT
static const GLenum GL_LOW_INT=0x8DF3
#undef GL_MEDIUM_INT
static const GLenum GL_MEDIUM_INT=0x8DF4
#undef GL_HIGH_INT
static const GLenum GL_HIGH_INT=0x8DF5
#undef GL_SHADER_BINARY_FORMATS
static const GLenum GL_SHADER_BINARY_FORMATS=0x8DF8
#undef GL_NUM_SHADER_BINARY_FORMATS
static const GLenum GL_NUM_SHADER_BINARY_FORMATS=0x8DF9
#undef GL_SHADER_COMPILER
static const GLenum GL_SHADER_COMPILER=0x8DFA
#undef GL_MAX_VERTEX_UNIFORM_VECTORS
static const GLenum GL_MAX_VERTEX_UNIFORM_VECTORS=0x8DFB
#undef GL_MAX_VARYING_VECTORS
static const GLenum GL_MAX_VARYING_VECTORS=0x8DFC
#undef GL_MAX_FRAGMENT_UNIFORM_VECTORS
static const GLenum GL_MAX_FRAGMENT_UNIFORM_VECTORS=0x8DFD
#undef GL_TRANSFORM_FEEDBACK
static const GLenum GL_TRANSFORM_FEEDBACK=0x8E22
#undef GL_TRANSFORM_FEEDBACK_PAUSED
static const GLenum GL_TRANSFORM_FEEDBACK_PAUSED=0x8E23
#undef GL_TRANSFORM_FEEDBACK_ACTIVE
static const GLenum GL_TRANSFORM_FEEDBACK_ACTIVE=0x8E24
#undef GL_TRANSFORM_FEEDBACK_BINDING
static const GLenum GL_TRANSFORM_FEEDBACK_BINDING=0x8E25
#undef GL_TEXTURE_SWIZZLE_R
static const GLenum GL_TEXTURE_SWIZZLE_R=0x8E42
#undef GL_TEXTURE_SWIZZLE_G
static const GLenum GL_TEXTURE_SWIZZLE_G=0x8E43
#undef GL_TEXTURE_SWIZZLE_B
static const GLenum GL_TEXTURE_SWIZZLE_B=0x8E44
#undef GL_TEXTURE_SWIZZLE_A
static const GLenum GL_TEXTURE_SWIZZLE_A=0x8E45
#undef GL_SAMPLE_POSITION
static const GLenum GL_SAMPLE_POSITION=0x8E50
#undef GL_SAMPLE_MASK
static const GLenum GL_SAMPLE_MASK=0x8E51
#undef GL_SAMPLE_MASK_VALUE
static const GLenum GL_SAMPLE_MASK_VALUE=0x8E52
#undef GL_MAX_SAMPLE_MASK_WORDS
static const GLenum GL_MAX_SAMPLE_MASK_WORDS=0x8E59
#undef GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET
static const GLenum GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET=0x8E5E
#undef GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET
static const GLenum GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET=0x8E5F
#undef GL_COPY_READ_BUFFER
static const GLenum GL_COPY_READ_BUFFER=0x8F36
#undef GL_COPY_READ_BUFFER_BINDING
static const GLenum GL_COPY_READ_BUFFER_BINDING=0x8F36
#undef GL_COPY_WRITE_BUFFER
static const GLenum GL_COPY_WRITE_BUFFER=0x8F37
#undef GL_COPY_WRITE_BUFFER_BINDING
static const GLenum GL_COPY_WRITE_BUFFER_BINDING=0x8F37
#undef GL_MAX_IMAGE_UNITS
static const GLenum GL_MAX_IMAGE_UNITS=0x8F38
#undef GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES
static const GLenum GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES=0x8F39
#undef GL_IMAGE_BINDING_NAME
static const GLenum GL_IMAGE_BINDING_NAME=0x8F3A
#undef GL_IMAGE_BINDING_LEVEL
static const GLenum GL_IMAGE_BINDING_LEVEL=0x8F3B
#undef GL_IMAGE_BINDING_LAYERED
static const GLenum GL_IMAGE_BINDING_LAYERED=0x8F3C
#undef GL_IMAGE_BINDING_LAYER
static const GLenum GL_IMAGE_BINDING_LAYER=0x8F3D
#undef GL_IMAGE_BINDING_ACCESS
static const GLenum GL_IMAGE_BINDING_ACCESS=0x8F3E
#undef GL_DRAW_INDIRECT_BUFFER
static const GLenum GL_DRAW_INDIRECT_BUFFER=0x8F3F
#undef GL_DRAW_INDIRECT_BUFFER_BINDING
static const GLenum GL_DRAW_INDIRECT_BUFFER_BINDING=0x8F43
#undef GL_VERTEX_BINDING_BUFFER
static const GLenum GL_VERTEX_BINDING_BUFFER=0x8F4F
#undef GL_R8_SNORM
static const GLenum GL_R8_SNORM=0x8F94
#undef GL_RG8_SNORM
static const GLenum GL_RG8_SNORM=0x8F95
#undef GL_RGB8_SNORM
static const GLenum GL_RGB8_SNORM=0x8F96
#undef GL_RGBA8_SNORM
static const GLenum GL_RGBA8_SNORM=0x8F97
#undef GL_SIGNED_NORMALIZED
static const GLenum GL_SIGNED_NORMALIZED=0x8F9C
#undef GL_IMAGE_2D
static const GLenum GL_IMAGE_2D=0x904D
#undef GL_IMAGE_3D
static const GLenum GL_IMAGE_3D=0x904E
#undef GL_IMAGE_CUBE
static const GLenum GL_IMAGE_CUBE=0x9050
#undef GL_IMAGE_2D_ARRAY
static const GLenum GL_IMAGE_2D_ARRAY=0x9053
#undef GL_INT_IMAGE_2D
static const GLenum GL_INT_IMAGE_2D=0x9058
#undef GL_INT_IMAGE_3D
static const GLenum GL_INT_IMAGE_3D=0x9059
#undef GL_INT_IMAGE_CUBE
static const GLenum GL_INT_IMAGE_CUBE=0x905B
#undef GL_INT_IMAGE_2D_ARRAY
static const GLenum GL_INT_IMAGE_2D_ARRAY=0x905E
#undef GL_UNSIGNED_INT_IMAGE_2D
static const GLenum GL_UNSIGNED_INT_IMAGE_2D=0x9063
#undef GL_UNSIGNED_INT_IMAGE_3D
static const GLenum GL_UNSIGNED_INT_IMAGE_3D=0x9064
#undef GL_UNSIGNED_INT_IMAGE_CUBE
static const GLenum GL_UNSIGNED_INT_IMAGE_CUBE=0x9066
#undef GL_UNSIGNED_INT_IMAGE_2D_ARRAY
static const GLenum GL_UNSIGNED_INT_IMAGE_2D_ARRAY=0x9069
#undef GL_IMAGE_BINDING_FORMAT
static const GLenum GL_IMAGE_BINDING_FORMAT=0x906E
#undef GL_RGB10_A2UI
static const GLenum GL_RGB10_A2UI=0x906F
#undef GL_IMAGE_FORMAT_COMPATIBILITY_TYPE
static const GLenum GL_IMAGE_FORMAT_COMPATIBILITY_TYPE=0x90C7
#undef GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE
static const GLenum GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE=0x90C8
#undef GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS
static const GLenum GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS=0x90C9
#undef GL_MAX_VERTEX_IMAGE_UNIFORMS
static const GLenum GL_MAX_VERTEX_IMAGE_UNIFORMS=0x90CA
#undef GL_MAX_FRAGMENT_IMAGE_UNIFORMS
static const GLenum GL_MAX_FRAGMENT_IMAGE_UNIFORMS=0x90CE
#undef GL_MAX_COMBINED_IMAGE_UNIFORMS
static const GLenum GL_MAX_COMBINED_IMAGE_UNIFORMS=0x90CF
#undef GL_SHADER_STORAGE_BUFFER
static const GLenum GL_SHADER_STORAGE_BUFFER=0x90D2
#undef GL_SHADER_STORAGE_BUFFER_BINDING
static const GLenum GL_SHADER_STORAGE_BUFFER_BINDING=0x90D3
#undef GL_SHADER_STORAGE_BUFFER_START
static const GLenum GL_SHADER_STORAGE_BUFFER_START=0x90D4
#undef GL_SHADER_STORAGE_BUFFER_SIZE
static const GLenum GL_SHADER_STORAGE_BUFFER_SIZE=0x90D5
#undef GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS
static const GLenum GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS=0x90D6
#undef GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS
static const GLenum GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS=0x90DA
#undef GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS
static const GLenum GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS=0x90DB
#undef GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS
static const GLenum GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS=0x90DC
#undef GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS
static const GLenum GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS=0x90DD
#undef GL_MAX_SHADER_STORAGE_BLOCK_SIZE
static const GLenum GL_MAX_SHADER_STORAGE_BLOCK_SIZE=0x90DE
#undef GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT
static const GLenum GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT=0x90DF
#undef GL_DEPTH_STENCIL_TEXTURE_MODE
static const GLenum GL_DEPTH_STENCIL_TEXTURE_MODE=0x90EA
#undef GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS
static const GLenum GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS=0x90EB
#undef GL_DISPATCH_INDIRECT_BUFFER
static const GLenum GL_DISPATCH_INDIRECT_BUFFER=0x90EE
#undef GL_DISPATCH_INDIRECT_BUFFER_BINDING
static const GLenum GL_DISPATCH_INDIRECT_BUFFER_BINDING=0x90EF
#undef GL_TEXTURE_2D_MULTISAMPLE
static const GLenum GL_TEXTURE_2D_MULTISAMPLE=0x9100
#undef GL_TEXTURE_BINDING_2D_MULTISAMPLE
static const GLenum GL_TEXTURE_BINDING_2D_MULTISAMPLE=0x9104
#undef GL_TEXTURE_SAMPLES
static const GLenum GL_TEXTURE_SAMPLES=0x9106
#undef GL_TEXTURE_FIXED_SAMPLE_LOCATIONS
static const GLenum GL_TEXTURE_FIXED_SAMPLE_LOCATIONS=0x9107
#undef GL_SAMPLER_2D_MULTISAMPLE
static const GLenum GL_SAMPLER_2D_MULTISAMPLE=0x9108
#undef GL_INT_SAMPLER_2D_MULTISAMPLE
static const GLenum GL_INT_SAMPLER_2D_MULTISAMPLE=0x9109
#undef GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE
static const GLenum GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE=0x910A
#undef GL_MAX_COLOR_TEXTURE_SAMPLES
static const GLenum GL_MAX_COLOR_TEXTURE_SAMPLES=0x910E
#undef GL_MAX_DEPTH_TEXTURE_SAMPLES
static const GLenum GL_MAX_DEPTH_TEXTURE_SAMPLES=0x910F
#undef GL_MAX_INTEGER_SAMPLES
static const GLenum GL_MAX_INTEGER_SAMPLES=0x9110
#undef GL_MAX_SERVER_WAIT_TIMEOUT
static const GLenum GL_MAX_SERVER_WAIT_TIMEOUT=0x9111
#undef GL_OBJECT_TYPE
static const GLenum GL_OBJECT_TYPE=0x9112
#undef GL_SYNC_CONDITION
static const GLenum GL_SYNC_CONDITION=0x9113
#undef GL_SYNC_STATUS
static const GLenum GL_SYNC_STATUS=0x9114
#undef GL_SYNC_FLAGS
static const GLenum GL_SYNC_FLAGS=0x9115
#undef GL_SYNC_FENCE
static const GLenum GL_SYNC_FENCE=0x9116
#undef GL_SYNC_GPU_COMMANDS_COMPLETE
static const GLenum GL_SYNC_GPU_COMMANDS_COMPLETE=0x9117
#undef GL_UNSIGNALED
static const GLenum GL_UNSIGNALED=0x9118
#undef GL_SIGNALED
static const GLenum GL_SIGNALED=0x9119
#undef GL_ALREADY_SIGNALED
static const GLenum GL_ALREADY_SIGNALED=0x911A
#undef GL_TIMEOUT_EXPIRED
static const GLenum GL_TIMEOUT_EXPIRED=0x911B
#undef GL_CONDITION_SATISFIED
static const GLenum GL_CONDITION_SATISFIED=0x911C
#undef GL_WAIT_FAILED
static const GLenum GL_WAIT_FAILED=0x911D
#undef GL_BUFFER_ACCESS_FLAGS
static const GLenum GL_BUFFER_ACCESS_FLAGS=0x911F
#undef GL_BUFFER_MAP_LENGTH
static const GLenum GL_BUFFER_MAP_LENGTH=0x9120
#undef GL_BUFFER_MAP_OFFSET
static const GLenum GL_BUFFER_MAP_OFFSET=0x9121
#undef GL_MAX_VERTEX_OUTPUT_COMPONENTS
static const GLenum GL_MAX_VERTEX_OUTPUT_COMPONENTS=0x9122
#undef GL_MAX_FRAGMENT_INPUT_COMPONENTS
static const GLenum GL_MAX_FRAGMENT_INPUT_COMPONENTS=0x9125
#undef GL_TEXTURE_IMMUTABLE_FORMAT
static const GLenum GL_TEXTURE_IMMUTABLE_FORMAT=0x912F
#undef GL_COMPUTE_SHADER
static const GLenum GL_COMPUTE_SHADER=0x91B9
#undef GL_MAX_COMPUTE_UNIFORM_BLOCKS
static const GLenum GL_MAX_COMPUTE_UNIFORM_BLOCKS=0x91BB
#undef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
static const GLenum GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS=0x91BC
#undef GL_MAX_COMPUTE_IMAGE_UNIFORMS
static const GLenum GL_MAX_COMPUTE_IMAGE_UNIFORMS=0x91BD
#undef GL_MAX_COMPUTE_WORK_GROUP_COUNT
static const GLenum GL_MAX_COMPUTE_WORK_GROUP_COUNT=0x91BE
#undef GL_MAX_COMPUTE_WORK_GROUP_SIZE
static const GLenum GL_MAX_COMPUTE_WORK_GROUP_SIZE=0x91BF
#undef GL_COMPRESSED_R11_EAC
static const GLenum GL_COMPRESSED_R11_EAC=0x9270
#undef GL_COMPRESSED_SIGNED_R11_EAC
static const GLenum GL_COMPRESSED_SIGNED_R11_EAC=0x9271
#undef GL_COMPRESSED_RG11_EAC
static const GLenum GL_COMPRESSED_RG11_EAC=0x9272
#undef GL_COMPRESSED_SIGNED_RG11_EAC
static const GLenum GL_COMPRESSED_SIGNED_RG11_EAC=0x9273
#undef GL_COMPRESSED_RGB8_ETC2
static const GLenum GL_COMPRESSED_RGB8_ETC2=0x9274
#undef GL_COMPRESSED_SRGB8_ETC2
static const GLenum GL_COMPRESSED_SRGB8_ETC2=0x9275
#undef GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
static const GLenum GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2=0x9276
#undef GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
static const GLenum GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2=0x9277
#undef GL_COMPRESSED_RGBA8_ETC2_EAC
static const GLenum GL_COMPRESSED_RGBA8_ETC2_EAC=0x9278
#undef GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
static const GLenum GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC=0x9279
#undef GL_ATOMIC_COUNTER_BUFFER
static const GLenum GL_ATOMIC_COUNTER_BUFFER=0x92C0
#undef GL_ATOMIC_COUNTER_BUFFER_BINDING
static const GLenum GL_ATOMIC_COUNTER_BUFFER_BINDING=0x92C1
#undef GL_ATOMIC_COUNTER_BUFFER_START
static const GLenum GL_ATOMIC_COUNTER_BUFFER_START=0x92C2
#undef GL_ATOMIC_COUNTER_BUFFER_SIZE
static const GLenum GL_ATOMIC_COUNTER_BUFFER_SIZE=0x92C3
#undef GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS
static const GLenum GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS=0x92CC
#undef GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS
static const GLenum GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS=0x92D0
#undef GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS
static const GLenum GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS=0x92D1
#undef GL_MAX_VERTEX_ATOMIC_COUNTERS
static const GLenum GL_MAX_VERTEX_ATOMIC_COUNTERS=0x92D2
#undef GL_MAX_FRAGMENT_ATOMIC_COUNTERS
static const GLenum GL_MAX_FRAGMENT_ATOMIC_COUNTERS=0x92D6
#undef GL_MAX_COMBINED_ATOMIC_COUNTERS
static const GLenum GL_MAX_COMBINED_ATOMIC_COUNTERS=0x92D7
#undef GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE
static const GLenum GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE=0x92D8
#undef GL_ACTIVE_ATOMIC_COUNTER_BUFFERS
static const GLenum GL_ACTIVE_ATOMIC_COUNTER_BUFFERS=0x92D9
#undef GL_UNSIGNED_INT_ATOMIC_COUNTER
static const GLenum GL_UNSIGNED_INT_ATOMIC_COUNTER=0x92DB
#undef GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS
static const GLenum GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS=0x92DC
#undef GL_UNIFORM
static const GLenum GL_UNIFORM=0x92E1
#undef GL_UNIFORM_BLOCK
static const GLenum GL_UNIFORM_BLOCK=0x92E2
#undef GL_PROGRAM_INPUT
static const GLenum GL_PROGRAM_INPUT=0x92E3
#undef GL_PROGRAM_OUTPUT
static const GLenum GL_PROGRAM_OUTPUT=0x92E4
#undef GL_BUFFER_VARIABLE
static const GLenum GL_BUFFER_VARIABLE=0x92E5
#undef GL_SHADER_STORAGE_BLOCK
static const GLenum GL_SHADER_STORAGE_BLOCK=0x92E6
#undef GL_TRANSFORM_FEEDBACK_VARYING
static const GLenum GL_TRANSFORM_FEEDBACK_VARYING=0x92F4
#undef GL_ACTIVE_RESOURCES
static const GLenum GL_ACTIVE_RESOURCES=0x92F5
#undef GL_MAX_NAME_LENGTH
static const GLenum GL_MAX_NAME_LENGTH=0x92F6
#undef GL_MAX_NUM_ACTIVE_VARIABLES
static const GLenum GL_MAX_NUM_ACTIVE_VARIABLES=0x92F7
#undef GL_NAME_LENGTH
static const GLenum GL_NAME_LENGTH=0x92F9
#undef GL_TYPE
static const GLenum GL_TYPE=0x92FA
#undef GL_ARRAY_SIZE
static const GLenum GL_ARRAY_SIZE=0x92FB
#undef GL_OFFSET
static const GLenum GL_OFFSET=0x92FC
#undef GL_BLOCK_INDEX
static const GLenum GL_BLOCK_INDEX=0x92FD
#undef GL_ARRAY_STRIDE
static const GLenum GL_ARRAY_STRIDE=0x92FE
#undef GL_MATRIX_STRIDE
static const GLenum GL_MATRIX_STRIDE=0x92FF
#undef GL_IS_ROW_MAJOR
static const GLenum GL_IS_ROW_MAJOR=0x9300
#undef GL_ATOMIC_COUNTER_BUFFER_INDEX
static const GLenum GL_ATOMIC_COUNTER_BUFFER_INDEX=0x9301
#undef GL_BUFFER_BINDING
static const GLenum GL_BUFFER_BINDING=0x9302
#undef GL_BUFFER_DATA_SIZE
static const GLenum GL_BUFFER_DATA_SIZE=0x9303
#undef GL_NUM_ACTIVE_VARIABLES
static const GLenum GL_NUM_ACTIVE_VARIABLES=0x9304
#undef GL_ACTIVE_VARIABLES
static const GLenum GL_ACTIVE_VARIABLES=0x9305
#undef GL_REFERENCED_BY_VERTEX_SHADER
static const GLenum GL_REFERENCED_BY_VERTEX_SHADER=0x9306
#undef GL_REFERENCED_BY_FRAGMENT_SHADER
static const GLenum GL_REFERENCED_BY_FRAGMENT_SHADER=0x930A
#undef GL_REFERENCED_BY_COMPUTE_SHADER
static const GLenum GL_REFERENCED_BY_COMPUTE_SHADER=0x930B
#undef GL_TOP_LEVEL_ARRAY_SIZE
static const GLenum GL_TOP_LEVEL_ARRAY_SIZE=0x930C
#undef GL_TOP_LEVEL_ARRAY_STRIDE
static const GLenum GL_TOP_LEVEL_ARRAY_STRIDE=0x930D
#undef GL_LOCATION
static const GLenum GL_LOCATION=0x930E
#undef GL_FRAMEBUFFER_DEFAULT_WIDTH
static const GLenum GL_FRAMEBUFFER_DEFAULT_WIDTH=0x9310
#undef GL_FRAMEBUFFER_DEFAULT_HEIGHT
static const GLenum GL_FRAMEBUFFER_DEFAULT_HEIGHT=0x9311
#undef GL_FRAMEBUFFER_DEFAULT_SAMPLES
static const GLenum GL_FRAMEBUFFER_DEFAULT_SAMPLES=0x9313
#undef GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS
static const GLenum GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS=0x9314
#undef GL_MAX_FRAMEBUFFER_WIDTH
static const GLenum GL_MAX_FRAMEBUFFER_WIDTH=0x9315
#undef GL_MAX_FRAMEBUFFER_HEIGHT
static const GLenum GL_MAX_FRAMEBUFFER_HEIGHT=0x9316
#undef GL_MAX_FRAMEBUFFER_SAMPLES
static const GLenum GL_MAX_FRAMEBUFFER_SAMPLES=0x9318
#undef GL_NUM_SAMPLE_COUNTS
static const GLenum GL_NUM_SAMPLE_COUNTS=0x9380
#undef GL_ALL_SHADER_BITS
static const GLenum GL_ALL_SHADER_BITS=0xFFFFFFFF
#undef GL_ALL_BARRIER_BITS
static const GLenum GL_ALL_BARRIER_BITS=0xFFFFFFFF
#undef GL_INVALID_INDEX
static const GLenum GL_INVALID_INDEX=0xFFFFFFFF
#undef GL_TIMEOUT_IGNORED
static const GLenum GL_TIMEOUT_IGNORED=0xFFFFFFFFFFFFFFFF
#undef GL_ONE
static const GLenum GL_ONE=1
#undef GL_TRUE
static const GLenum GL_TRUE=1
extern "C" {
extern void glActiveShaderProgram(GLuint,GLuint);
extern void glActiveTexture(GLenum);
extern void glAttachShader(GLuint,GLuint);
extern void glBeginQuery(GLenum,GLuint);
extern void glBeginTransformFeedback(GLenum);
extern void glBindAttribLocation(GLuint,GLuint,const GLchar *);
extern void glBindBuffer(GLenum,GLuint);
extern void glBindBufferBase(GLenum,GLuint,GLuint);
extern void glBindBufferRange(GLenum,GLuint,GLuint,GLintptr,GLsizeiptr);
extern void glBindFramebuffer(GLenum,GLuint);
extern void glBindImageTexture(GLuint,GLuint,GLint,GLboolean,GLint,GLenum,GLenum);
extern void glBindProgramPipeline(GLuint);
extern void glBindRenderbuffer(GLenum,GLuint);
extern void glBindSampler(GLuint,GLuint);
extern void glBindTexture(GLenum,GLuint);
extern void glBindTransformFeedback(GLenum,GLuint);
extern void glBindVertexArray(GLuint);
extern void glBindVertexBuffer(GLuint,GLuint,GLintptr,GLsizei);
extern void glBlendColor(GLfloat,GLfloat,GLfloat,GLfloat);
extern void glBlendEquation(GLenum);
extern void glBlendEquationSeparate(GLenum,GLenum);
extern void glBlendFunc(GLenum,GLenum);
extern void glBlendFuncSeparate(GLenum,GLenum,GLenum,GLenum);
extern void glBlitFramebuffer(GLint,GLint,GLint,GLint,GLint,GLint,GLint,GLint,GLbitfield,GLenum);
extern void glBufferData(GLenum,GLsizeiptr,const void *,GLenum);
extern void glBufferSubData(GLenum,GLintptr,GLsizeiptr,const void *);
extern GLenum glCheckFramebufferStatus(GLenum);
extern void glClear(GLbitfield);
extern void glClearBufferfi(GLenum,GLint,GLfloat,GLint);
extern void glClearBufferfv(GLenum,GLint,const GLfloat *);
extern void glClearBufferiv(GLenum,GLint,const GLint *);
extern void glClearBufferuiv(GLenum,GLint,const GLuint *);
extern void glClearColor(GLfloat,GLfloat,GLfloat,GLfloat);
extern void glClearDepthf(GLfloat);
extern void glClearStencil(GLint);
extern GLenum glClientWaitSync(GLsync,GLbitfield,GLuint64);
extern void glColorMask(GLboolean,GLboolean,GLboolean,GLboolean);
extern void glCompileShader(GLuint);
extern void glCompressedTexImage2D(GLenum,GLint,GLenum,GLsizei,GLsizei,GLint,GLsizei,const void *);
extern void glCompressedTexImage3D(GLenum,GLint,GLenum,GLsizei,GLsizei,GLsizei,GLint,GLsizei,const void *);
extern void glCompressedTexSubImage2D(GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLsizei,const void *);
extern void glCompressedTexSubImage3D(GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLsizei,const void *);
extern void glCopyBufferSubData(GLenum,GLenum,GLintptr,GLintptr,GLsizeiptr);
extern void glCopyTexImage2D(GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLsizei,GLint);
extern void glCopyTexSubImage2D(GLenum,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei);
extern void glCopyTexSubImage3D(GLenum,GLint,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei);
extern GLuint glCreateProgram();
extern GLuint glCreateShader(GLenum);
extern GLuint glCreateShaderProgramv(GLenum,GLsizei,const GLchar *const*);
extern void glCullFace(GLenum);
extern void glDeleteBuffers(GLsizei,const GLuint *);
extern void glDeleteFramebuffers(GLsizei,const GLuint *);
extern void glDeleteProgram(GLuint);
extern void glDeleteProgramPipelines(GLsizei,const GLuint *);
extern void glDeleteQueries(GLsizei,const GLuint *);
extern void glDeleteRenderbuffers(GLsizei,const GLuint *);
extern void glDeleteSamplers(GLsizei,const GLuint *);
extern void glDeleteShader(GLuint);
extern void glDeleteSync(GLsync);
extern void glDeleteTextures(GLsizei,const GLuint *);
extern void glDeleteTransformFeedbacks(GLsizei,const GLuint *);
extern void glDeleteVertexArrays(GLsizei,const GLuint *);
extern void glDepthFunc(GLenum);
extern void glDepthMask(GLboolean);
extern void glDepthRangef(GLfloat,GLfloat);
extern void glDetachShader(GLuint,GLuint);
extern void glDisable(GLenum);
extern void glDisableVertexAttribArray(GLuint);
extern void glDispatchCompute(GLuint,GLuint,GLuint);
extern void glDispatchComputeIndirect(GLintptr);
extern void glDrawArrays(GLenum,GLint,GLsizei);
extern void glDrawArraysIndirect(GLenum,const void *);
extern void glDrawArraysInstanced(GLenum,GLint,GLsizei,GLsizei);
extern void glDrawBuffers(GLsizei,const GLenum *);
extern void glDrawElements(GLenum,GLsizei,GLenum,const void *);
extern void glDrawElementsIndirect(GLenum,GLenum,const void *);
extern void glDrawElementsInstanced(GLenum,GLsizei,GLenum,const void *,GLsizei);
extern void glDrawRangeElements(GLenum,GLuint,GLuint,GLsizei,GLenum,const void *);
extern void glEnable(GLenum);
extern void glEnableVertexAttribArray(GLuint);
extern void glEndQuery(GLenum);
extern void glEndTransformFeedback();
extern GLsync glFenceSync(GLenum,GLbitfield);
extern void glFinish();
extern void glFlush();
extern void glFlushMappedBufferRange(GLenum,GLintptr,GLsizeiptr);
extern void glFramebufferParameteri(GLenum,GLenum,GLint);
extern void glFramebufferRenderbuffer(GLenum,GLenum,GLenum,GLuint);
extern void glFramebufferTexture2D(GLenum,GLenum,GLenum,GLuint,GLint);
extern void glFramebufferTextureLayer(GLenum,GLenum,GLuint,GLint,GLint);
extern void glFrontFace(GLenum);
extern void glGenBuffers(GLsizei,GLuint *);
extern void glGenFramebuffers(GLsizei,GLuint *);
extern void glGenProgramPipelines(GLsizei,GLuint *);
extern void glGenQueries(GLsizei,GLuint *);
extern void glGenRenderbuffers(GLsizei,GLuint *);
extern void glGenSamplers(GLsizei,GLuint *);
extern void glGenTextures(GLsizei,GLuint *);
extern void glGenTransformFeedbacks(GLsizei,GLuint *);
extern void glGenVertexArrays(GLsizei,GLuint *);
extern void glGenerateMipmap(GLenum);
extern void glGetActiveAttrib(GLuint,GLuint,GLsizei,GLsizei *,GLint *,GLenum *,GLchar *);
extern void glGetActiveUniform(GLuint,GLuint,GLsizei,GLsizei *,GLint *,GLenum *,GLchar *);
extern void glGetActiveUniformBlockName(GLuint,GLuint,GLsizei,GLsizei *,GLchar *);
extern void glGetActiveUniformBlockiv(GLuint,GLuint,GLenum,GLint *);
extern void glGetActiveUniformsiv(GLuint,GLsizei,const GLuint *,GLenum,GLint *);
extern void glGetAttachedShaders(GLuint,GLsizei,GLsizei *,GLuint *);
extern GLint glGetAttribLocation(GLuint,const GLchar *);
extern void glGetBooleani_v(GLenum,GLuint,GLboolean *);
extern void glGetBooleanv(GLenum,GLboolean *);
extern void glGetBufferParameteri64v(GLenum,GLenum,GLint64 *);
extern void glGetBufferParameteriv(GLenum,GLenum,GLint *);
extern void glGetBufferPointerv(GLenum,GLenum,void **);
extern GLenum glGetError();
extern void glGetFloatv(GLenum,GLfloat *);
extern GLint glGetFragDataLocation(GLuint,const GLchar *);
extern void glGetFramebufferAttachmentParameteriv(GLenum,GLenum,GLenum,GLint *);
extern void glGetFramebufferParameteriv(GLenum,GLenum,GLint *);
extern void glGetInteger64i_v(GLenum,GLuint,GLint64 *);
extern void glGetInteger64v(GLenum,GLint64 *);
extern void glGetIntegeri_v(GLenum,GLuint,GLint *);
extern void glGetIntegerv(GLenum,GLint *);
extern void glGetInternalformativ(GLenum,GLenum,GLenum,GLsizei,GLint *);
extern void glGetMultisamplefv(GLenum,GLuint,GLfloat *);
extern void glGetProgramBinary(GLuint,GLsizei,GLsizei *,GLenum *,void *);
extern void glGetProgramInfoLog(GLuint,GLsizei,GLsizei *,GLchar *);
extern void glGetProgramInterfaceiv(GLuint,GLenum,GLenum,GLint *);
extern void glGetProgramPipelineInfoLog(GLuint,GLsizei,GLsizei *,GLchar *);
extern void glGetProgramPipelineiv(GLuint,GLenum,GLint *);
extern GLuint glGetProgramResourceIndex(GLuint,GLenum,const GLchar *);
extern GLint glGetProgramResourceLocation(GLuint,GLenum,const GLchar *);
extern void glGetProgramResourceName(GLuint,GLenum,GLuint,GLsizei,GLsizei *,GLchar *);
extern void glGetProgramResourceiv(GLuint,GLenum,GLuint,GLsizei,const GLenum *,GLsizei,GLsizei *,GLint *);
extern void glGetProgramiv(GLuint,GLenum,GLint *);
extern void glGetQueryObjectuiv(GLuint,GLenum,GLuint *);
extern void glGetQueryiv(GLenum,GLenum,GLint *);
extern void glGetRenderbufferParameteriv(GLenum,GLenum,GLint *);
extern void glGetSamplerParameterfv(GLuint,GLenum,GLfloat *);
extern void glGetSamplerParameteriv(GLuint,GLenum,GLint *);
extern void glGetShaderInfoLog(GLuint,GLsizei,GLsizei *,GLchar *);
extern void glGetShaderPrecisionFormat(GLenum,GLenum,GLint *,GLint *);
extern void glGetShaderSource(GLuint,GLsizei,GLsizei *,GLchar *);
extern void glGetShaderiv(GLuint,GLenum,GLint *);
extern const GLubyte * glGetString(GLenum);
extern const GLubyte * glGetStringi(GLenum,GLuint);
extern void glGetSynciv(GLsync,GLenum,GLsizei,GLsizei *,GLint *);
extern void glGetTexLevelParameterfv(GLenum,GLint,GLenum,GLfloat *);
extern void glGetTexLevelParameteriv(GLenum,GLint,GLenum,GLint *);
extern void glGetTexParameterfv(GLenum,GLenum,GLfloat *);
extern void glGetTexParameteriv(GLenum,GLenum,GLint *);
extern void glGetTransformFeedbackVarying(GLuint,GLuint,GLsizei,GLsizei *,GLsizei *,GLenum *,GLchar *);
extern GLuint glGetUniformBlockIndex(GLuint,const GLchar *);
extern void glGetUniformIndices(GLuint,GLsizei,const GLchar *const*,GLuint *);
extern GLint glGetUniformLocation(GLuint,const GLchar *);
extern void glGetUniformfv(GLuint,GLint,GLfloat *);
extern void glGetUniformiv(GLuint,GLint,GLint *);
extern void glGetUniformuiv(GLuint,GLint,GLuint *);
extern void glGetVertexAttribIiv(GLuint,GLenum,GLint *);
extern void glGetVertexAttribIuiv(GLuint,GLenum,GLuint *);
extern void glGetVertexAttribPointerv(GLuint,GLenum,void **);
extern void glGetVertexAttribfv(GLuint,GLenum,GLfloat *);
extern void glGetVertexAttribiv(GLuint,GLenum,GLint *);
extern void glHint(GLenum,GLenum);
extern void glInvalidateFramebuffer(GLenum,GLsizei,const GLenum *);
extern void glInvalidateSubFramebuffer(GLenum,GLsizei,const GLenum *,GLint,GLint,GLsizei,GLsizei);
extern GLboolean glIsBuffer(GLuint);
extern GLboolean glIsEnabled(GLenum);
extern GLboolean glIsFramebuffer(GLuint);
extern GLboolean glIsProgram(GLuint);
extern GLboolean glIsProgramPipeline(GLuint);
extern GLboolean glIsQuery(GLuint);
extern GLboolean glIsRenderbuffer(GLuint);
extern GLboolean glIsSampler(GLuint);
extern GLboolean glIsShader(GLuint);
extern GLboolean glIsSync(GLsync);
extern GLboolean glIsTexture(GLuint);
extern GLboolean glIsTransformFeedback(GLuint);
extern GLboolean glIsVertexArray(GLuint);
extern void glLineWidth(GLfloat);
extern void glLinkProgram(GLuint);
extern void * glMapBufferRange(GLenum,GLintptr,GLsizeiptr,GLbitfield);
extern void glMemoryBarrier(GLbitfield);
extern void glMemoryBarrierByRegion(GLbitfield);
extern void glPauseTransformFeedback();
extern void glPixelStorei(GLenum,GLint);
extern void glPolygonOffset(GLfloat,GLfloat);
extern void glProgramBinary(GLuint,GLenum,const void *,GLsizei);
extern void glProgramParameteri(GLuint,GLenum,GLint);
extern void glProgramUniform1f(GLuint,GLint,GLfloat);
extern void glProgramUniform1fv(GLuint,GLint,GLsizei,const GLfloat *);
extern void glProgramUniform1i(GLuint,GLint,GLint);
extern void glProgramUniform1iv(GLuint,GLint,GLsizei,const GLint *);
extern void glProgramUniform1ui(GLuint,GLint,GLuint);
extern void glProgramUniform1uiv(GLuint,GLint,GLsizei,const GLuint *);
extern void glProgramUniform2f(GLuint,GLint,GLfloat,GLfloat);
extern void glProgramUniform2fv(GLuint,GLint,GLsizei,const GLfloat *);
extern void glProgramUniform2i(GLuint,GLint,GLint,GLint);
extern void glProgramUniform2iv(GLuint,GLint,GLsizei,const GLint *);
extern void glProgramUniform2ui(GLuint,GLint,GLuint,GLuint);
extern void glProgramUniform2uiv(GLuint,GLint,GLsizei,const GLuint *);
extern void glProgramUniform3f(GLuint,GLint,GLfloat,GLfloat,GLfloat);
extern void glProgramUniform3fv(GLuint,GLint,GLsizei,const GLfloat *);
extern void glProgramUniform3i(GLuint,GLint,GLint,GLint,GLint);
extern void glProgramUniform3iv(GLuint,GLint,GLsizei,const GLint *);
extern void glProgramUniform3ui(GLuint,GLint,GLuint,GLuint,GLuint);
extern void glProgramUniform3uiv(GLuint,GLint,GLsizei,const GLuint *);
extern void glProgramUniform4f(GLuint,GLint,GLfloat,GLfloat,GLfloat,GLfloat);
extern void glProgramUniform4fv(GLuint,GLint,GLsizei,const GLfloat *);
extern void glProgramUniform4i(GLuint,GLint,GLint,GLint,GLint,GLint);
extern void glProgramUniform4iv(GLuint,GLint,GLsizei,const GLint *);
extern void glProgramUniform4ui(GLuint,GLint,GLuint,GLuint,GLuint,GLuint);
extern void glProgramUniform4uiv(GLuint,GLint,GLsizei,const GLuint *);
extern void glProgramUniformMatrix2fv(GLuint,GLint,GLsizei,GLboolean,const GLfloat *);
extern void glProgramUniformMatrix2x3fv(GLuint,GLint,GLsizei,GLboolean,const GLfloat *);
extern void glProgramUniformMatrix2x4fv(GLuint,GLint,GLsizei,GLboolean,const GLfloat *);
extern void glProgramUniformMatrix3fv(GLuint,GLint,GLsizei,GLboolean,const GLfloat *);
extern void glProgramUniformMatrix3x2fv(GLuint,GLint,GLsizei,GLboolean,const GLfloat *);
extern void glProgramUniformMatrix3x4fv(GLuint,GLint,GLsizei,GLboolean,const GLfloat *);
extern void glProgramUniformMatrix4fv(GLuint,GLint,GLsizei,GLboolean,const GLfloat *);
extern void glProgramUniformMatrix4x2fv(GLuint,GLint,GLsizei,GLboolean,const GLfloat *);
extern void glProgramUniformMatrix4x3fv(GLuint,GLint,GLsizei,GLboolean,const GLfloat *);
extern void glReadBuffer(GLenum);
extern void glReadPixels(GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,void *);
extern void glReleaseShaderCompiler();
extern void glRenderbufferStorage(GLenum,GLenum,GLsizei,GLsizei);
extern void glRenderbufferStorageMultisample(GLenum,GLsizei,GLenum,GLsizei,GLsizei);
extern void glResumeTransformFeedback();
extern void glSampleCoverage(GLfloat,GLboolean);
extern void glSampleMaski(GLuint,GLbitfield);
extern void glSamplerParameterf(GLuint,GLenum,GLfloat);
extern void glSamplerParameterfv(GLuint,GLenum,const GLfloat *);
extern void glSamplerParameteri(GLuint,GLenum,GLint);
extern void glSamplerParameteriv(GLuint,GLenum,const GLint *);
extern void glScissor(GLint,GLint,GLsizei,GLsizei);
extern void glShaderBinary(GLsizei,const GLuint *,GLenum,const void *,GLsizei);
extern void glShaderSource(GLuint,GLsizei,const GLchar *const*,const GLint *);
extern void glStencilFunc(GLenum,GLint,GLuint);
extern void glStencilFuncSeparate(GLenum,GLenum,GLint,GLuint);
extern void glStencilMask(GLuint);
extern void glStencilMaskSeparate(GLenum,GLuint);
extern void glStencilOp(GLenum,GLenum,GLenum);
extern void glStencilOpSeparate(GLenum,GLenum,GLenum,GLenum);
extern void glTexImage2D(GLenum,GLint,GLint,GLsizei,GLsizei,GLint,GLenum,GLenum,const void *);
extern void glTexImage3D(GLenum,GLint,GLint,GLsizei,GLsizei,GLsizei,GLint,GLenum,GLenum,const void *);
extern void glTexParameterf(GLenum,GLenum,GLfloat);
extern void glTexParameterfv(GLenum,GLenum,const GLfloat *);
extern void glTexParameteri(GLenum,GLenum,GLint);
extern void glTexParameteriv(GLenum,GLenum,const GLint *);
extern void glTexStorage2D(GLenum,GLsizei,GLenum,GLsizei,GLsizei);
extern void glTexStorage2DMultisample(GLenum,GLsizei,GLenum,GLsizei,GLsizei,GLboolean);
extern void glTexStorage3D(GLenum,GLsizei,GLenum,GLsizei,GLsizei,GLsizei);
extern void glTexSubImage2D(GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,const void *);
extern void glTexSubImage3D(GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLenum,const void *);
extern void glTransformFeedbackVaryings(GLuint,GLsizei,const GLchar *const*,GLenum);
extern void glUniform1f(GLint,GLfloat);
extern void glUniform1fv(GLint,GLsizei,const GLfloat *);
extern void glUniform1i(GLint,GLint);
extern void glUniform1iv(GLint,GLsizei,const GLint *);
extern void glUniform1ui(GLint,GLuint);
extern void glUniform1uiv(GLint,GLsizei,const GLuint *);
extern void glUniform2f(GLint,GLfloat,GLfloat);
extern void glUniform2fv(GLint,GLsizei,const GLfloat *);
extern void glUniform2i(GLint,GLint,GLint);
extern void glUniform2iv(GLint,GLsizei,const GLint *);
extern void glUniform2ui(GLint,GLuint,GLuint);
extern void glUniform2uiv(GLint,GLsizei,const GLuint *);
extern void glUniform3f(GLint,GLfloat,GLfloat,GLfloat);
extern void glUniform3fv(GLint,GLsizei,const GLfloat *);
extern void glUniform3i(GLint,GLint,GLint,GLint);
extern void glUniform3iv(GLint,GLsizei,const GLint *);
extern void glUniform3ui(GLint,GLuint,GLuint,GLuint);
extern void glUniform3uiv(GLint,GLsizei,const GLuint *);
extern void glUniform4f(GLint,GLfloat,GLfloat,GLfloat,GLfloat);
extern void glUniform4fv(GLint,GLsizei,const GLfloat *);
extern void glUniform4i(GLint,GLint,GLint,GLint,GLint);
extern void glUniform4iv(GLint,GLsizei,const GLint *);
extern void glUniform4ui(GLint,GLuint,GLuint,GLuint,GLuint);
extern void glUniform4uiv(GLint,GLsizei,const GLuint *);
extern void glUniformBlockBinding(GLuint,GLuint,GLuint);
extern void glUniformMatrix2fv(GLint,GLsizei,GLboolean,const GLfloat *);
extern void glUniformMatrix2x3fv(GLint,GLsizei,GLboolean,const GLfloat *);
extern void glUniformMatrix2x4fv(GLint,GLsizei,GLboolean,const GLfloat *);
extern void glUniformMatrix3fv(GLint,GLsizei,GLboolean,const GLfloat *);
extern void glUniformMatrix3x2fv(GLint,GLsizei,GLboolean,const GLfloat *);
extern void glUniformMatrix3x4fv(GLint,GLsizei,GLboolean,const GLfloat *);
extern void glUniformMatrix4fv(GLint,GLsizei,GLboolean,const GLfloat *);
extern void glUniformMatrix4x2fv(GLint,GLsizei,GLboolean,const GLfloat *);
extern void glUniformMatrix4x3fv(GLint,GLsizei,GLboolean,const GLfloat *);
extern GLboolean glUnmapBuffer(GLenum);
extern void glUseProgram(GLuint);
extern void glUseProgramStages(GLuint,GLbitfield,GLuint);
extern void glValidateProgram(GLuint);
extern void glValidateProgramPipeline(GLuint);
extern void glVertexAttrib1f(GLuint,GLfloat);
extern void glVertexAttrib1fv(GLuint,const GLfloat *);
extern void glVertexAttrib2f(GLuint,GLfloat,GLfloat);
extern void glVertexAttrib2fv(GLuint,const GLfloat *);
extern void glVertexAttrib3f(GLuint,GLfloat,GLfloat,GLfloat);
extern void glVertexAttrib3fv(GLuint,const GLfloat *);
extern void glVertexAttrib4f(GLuint,GLfloat,GLfloat,GLfloat,GLfloat);
extern void glVertexAttrib4fv(GLuint,const GLfloat *);
extern void glVertexAttribBinding(GLuint,GLuint);
extern void glVertexAttribDivisor(GLuint,GLuint);
extern void glVertexAttribFormat(GLuint,GLint,GLenum,GLboolean,GLuint);
extern void glVertexAttribI4i(GLuint,GLint,GLint,GLint,GLint);
extern void glVertexAttribI4iv(GLuint,const GLint *);
extern void glVertexAttribI4ui(GLuint,GLuint,GLuint,GLuint,GLuint);
extern void glVertexAttribI4uiv(GLuint,const GLuint *);
extern void glVertexAttribIFormat(GLuint,GLint,GLenum,GLuint);
extern void glVertexAttribIPointer(GLuint,GLint,GLenum,GLsizei,const void *);
extern void glVertexAttribPointer(GLuint,GLint,GLenum,GLboolean,GLsizei,const void *);
extern void glVertexBindingDivisor(GLuint,GLuint);
extern void glViewport(GLint,GLint,GLsizei,GLsizei);
extern void glWaitSync(GLsync,GLbitfield,GLuint64);
}
namespace gl{

static inline void ActiveShaderProgram(GLuint pipeline1,GLuint program1)
{
	 glActiveShaderProgram(pipeline1,program1);
}
static inline void ActiveTexture(GLenum texture1)
{
	 glActiveTexture(texture1);
}
static inline void AttachShader(GLuint program1,GLuint shader1)
{
	 glAttachShader(program1,shader1);
}
static inline void BeginQuery(GLenum target1,GLuint id1)
{
	 glBeginQuery(target1,id1);
}
static inline void BeginTransformFeedback(GLenum primitiveMode1)
{
	 glBeginTransformFeedback(primitiveMode1);
}
static inline void BindAttribLocation(GLuint program1,GLuint index1,const GLchar * name1)
{
	 glBindAttribLocation(program1,index1,name1);
}
static inline void BindBuffer(GLenum target1,GLuint buffer1)
{
	 glBindBuffer(target1,buffer1);
}
static inline void BindBufferBase(GLenum target1,GLuint index1,GLuint buffer1)
{
	 glBindBufferBase(target1,index1,buffer1);
}
static inline void BindBufferRange(GLenum target1,GLuint index1,GLuint buffer1,GLintptr offset1,GLsizeiptr size1)
{
	 glBindBufferRange(target1,index1,buffer1,offset1,size1);
}
static inline void BindFramebuffer(GLenum target1,GLuint framebuffer1)
{
	 glBindFramebuffer(target1,framebuffer1);
}
static inline void BindImageTexture(GLuint unit1,GLuint texture1,GLint level1,GLboolean layered1,GLint layer1,GLenum access1,GLenum format1)
{
	 glBindImageTexture(unit1,texture1,level1,layered1,layer1,access1,format1);
}
static inline void BindProgramPipeline(GLuint pipeline1)
{
	 glBindProgramPipeline(pipeline1);
}
static inline void BindRenderbuffer(GLenum target1,GLuint renderbuffer1)
{
	 glBindRenderbuffer(target1,renderbuffer1);
}
static inline void BindSampler(GLuint unit1,GLuint sampler1)
{
	 glBindSampler(unit1,sampler1);
}
static inline void BindTexture(GLenum target1,GLuint texture1)
{
	 glBindTexture(target1,texture1);
}
static inline void BindTransformFeedback(GLenum target1,GLuint id1)
{
	 glBindTransformFeedback(target1,id1);
}
static inline void BindVertexArray(GLuint array1)
{
	 glBindVertexArray(array1);
}
static inline void BindVertexBuffer(GLuint bindingindex1,GLuint buffer1,GLintptr offset1,GLsizei stride1)
{
	 glBindVertexBuffer(bindingindex1,buffer1,offset1,stride1);
}
static inline void BlendColor(GLfloat red1,GLfloat green1,GLfloat blue1,GLfloat alpha1)
{
	 glBlendColor(red1,green1,blue1,alpha1);
}
static inline void BlendEquation(GLenum mode1)
{
	 glBlendEquation(mode1);
}
static inline void BlendEquationSeparate(GLenum modeRGB1,GLenum modeAlpha1)
{
	 glBlendEquationSeparate(modeRGB1,modeAlpha1);
}
static inline void BlendFunc(GLenum sfactor1,GLenum dfactor1)
{
	 glBlendFunc(sfactor1,dfactor1);
}
static inline void BlendFuncSeparate(GLenum sfactorRGB1,GLenum dfactorRGB1,GLenum sfactorAlpha1,GLenum dfactorAlpha1)
{
	 glBlendFuncSeparate(sfactorRGB1,dfactorRGB1,sfactorAlpha1,dfactorAlpha1);
}
static inline void BlitFramebuffer(GLint srcX01,GLint srcY01,GLint srcX11,GLint srcY11,GLint dstX01,GLint dstY01,GLint dstX11,GLint dstY11,GLbitfield mask1,GLenum filter1)
{
	 glBlitFramebuffer(srcX01,srcY01,srcX11,srcY11,dstX01,dstY01,dstX11,dstY11,mask1,filter1);
}
static inline void BufferData(GLenum target1,GLsizeiptr size1,const void * data1,GLenum usage1)
{
	 glBufferData(target1,size1,data1,usage1);
}
static inline void BufferSubData(GLenum target1,GLintptr offset1,GLsizeiptr size1,const void * data1)
{
	 glBufferSubData(target1,offset1,size1,data1);
}
static inline GLenum CheckFramebufferStatus(GLenum target1)
{
	return glCheckFramebufferStatus(target1);
}
static inline void Clear(GLbitfield mask1)
{
	 glClear(mask1);
}
static inline void ClearBufferfi(GLenum buffer1,GLint drawbuffer1,GLfloat depth1,GLint stencil1)
{
	 glClearBufferfi(buffer1,drawbuffer1,depth1,stencil1);
}
static inline void ClearBufferfv(GLenum buffer1,GLint drawbuffer1,const GLfloat * value1)
{
	 glClearBufferfv(buffer1,drawbuffer1,value1);
}
static inline void ClearBufferiv(GLenum buffer1,GLint drawbuffer1,const GLint * value1)
{
	 glClearBufferiv(buffer1,drawbuffer1,value1);
}
static inline void ClearBufferuiv(GLenum buffer1,GLint drawbuffer1,const GLuint * value1)
{
	 glClearBufferuiv(buffer1,drawbuffer1,value1);
}
static inline void ClearColor(GLfloat red1,GLfloat green1,GLfloat blue1,GLfloat alpha1)
{
	 glClearColor(red1,green1,blue1,alpha1);
}
static inline void ClearDepthf(GLfloat d1)
{
	 glClearDepthf(d1);
}
static inline void ClearStencil(GLint s1)
{
	 glClearStencil(s1);
}
static inline GLenum ClientWaitSync(GLsync sync1,GLbitfield flags1,GLuint64 timeout1)
{
	return glClientWaitSync(sync1,flags1,timeout1);
}
static inline void ColorMask(GLboolean red1,GLboolean green1,GLboolean blue1,GLboolean alpha1)
{
	 glColorMask(red1,green1,blue1,alpha1);
}
static inline void CompileShader(GLuint shader1)
{
	 glCompileShader(shader1);
}
static inline void CompressedTexImage2D(GLenum target1,GLint level1,GLenum internalformat1,GLsizei width1,GLsizei height1,GLint border1,GLsizei imageSize1,const void * data1)
{
	 glCompressedTexImage2D(target1,level1,internalformat1,width1,height1,border1,imageSize1,data1);
}
static inline void CompressedTexImage3D(GLenum target1,GLint level1,GLenum internalformat1,GLsizei width1,GLsizei height1,GLsizei depth1,GLint border1,GLsizei imageSize1,const void * data1)
{
	 glCompressedTexImage3D(target1,level1,internalformat1,width1,height1,depth1,border1,imageSize1,data1);
}
static inline void CompressedTexSubImage2D(GLenum target1,GLint level1,GLint xoffset1,GLint yoffset1,GLsizei width1,GLsizei height1,GLenum format1,GLsizei imageSize1,const void * data1)
{
	 glCompressedTexSubImage2D(target1,level1,xoffset1,yoffset1,width1,height1,format1,imageSize1,data1);
}
static inline void CompressedTexSubImage3D(GLenum target1,GLint level1,GLint xoffset1,GLint yoffset1,GLint zoffset1,GLsizei width1,GLsizei height1,GLsizei depth1,GLenum format1,GLsizei imageSize1,const void * data1)
{
	 glCompressedTexSubImage3D(target1,level1,xoffset1,yoffset1,zoffset1,width1,height1,depth1,format1,imageSize1,data1);
}
static inline void CopyBufferSubData(GLenum readTarget1,GLenum writeTarget1,GLintptr readOffset1,GLintptr writeOffset1,GLsizeiptr size1)
{
	 glCopyBufferSubData(readTarget1,writeTarget1,readOffset1,writeOffset1,size1);
}
static inline void CopyTexImage2D(GLenum target1,GLint level1,GLenum internalformat1,GLint x1,GLint y1,GLsizei width1,GLsizei height1,GLint border1)
{
	 glCopyTexImage2D(target1,level1,internalformat1,x1,y1,width1,height1,border1);
}
static inline void CopyTexSubImage2D(GLenum target1,GLint level1,GLint xoffset1,GLint yoffset1,GLint x1,GLint y1,GLsizei width1,GLsizei height1)
{
	 glCopyTexSubImage2D(target1,level1,xoffset1,yoffset1,x1,y1,width1,height1);
}
static inline void CopyTexSubImage3D(GLenum target1,GLint level1,GLint xoffset1,GLint yoffset1,GLint zoffset1,GLint x1,GLint y1,GLsizei width1,GLsizei height1)
{
	 glCopyTexSubImage3D(target1,level1,xoffset1,yoffset1,zoffset1,x1,y1,width1,height1);
}
static inline GLuint CreateProgram()
{
	return glCreateProgram();
}
static inline GLuint CreateShader(GLenum type1)
{
	return glCreateShader(type1);
}
static inline GLuint CreateShaderProgramv(GLenum type1,GLsizei count1,const GLchar *const* strings1)
{
	return glCreateShaderProgramv(type1,count1,strings1);
}
static inline void CullFace(GLenum mode1)
{
	 glCullFace(mode1);
}
static inline void DeleteBuffers(GLsizei n1,const GLuint * buffers1)
{
	 glDeleteBuffers(n1,buffers1);
}
static inline void DeleteFramebuffers(GLsizei n1,const GLuint * framebuffers1)
{
	 glDeleteFramebuffers(n1,framebuffers1);
}
static inline void DeleteProgram(GLuint program1)
{
	 glDeleteProgram(program1);
}
static inline void DeleteProgramPipelines(GLsizei n1,const GLuint * pipelines1)
{
	 glDeleteProgramPipelines(n1,pipelines1);
}
static inline void DeleteQueries(GLsizei n1,const GLuint * ids1)
{
	 glDeleteQueries(n1,ids1);
}
static inline void DeleteRenderbuffers(GLsizei n1,const GLuint * renderbuffers1)
{
	 glDeleteRenderbuffers(n1,renderbuffers1);
}
static inline void DeleteSamplers(GLsizei count1,const GLuint * samplers1)
{
	 glDeleteSamplers(count1,samplers1);
}
static inline void DeleteShader(GLuint shader1)
{
	 glDeleteShader(shader1);
}
static inline void DeleteSync(GLsync sync1)
{
	 glDeleteSync(sync1);
}
static inline void DeleteTextures(GLsizei n1,const GLuint * textures1)
{
	 glDeleteTextures(n1,textures1);
}
static inline void DeleteTransformFeedbacks(GLsizei n1,const GLuint * ids1)
{
	 glDeleteTransformFeedbacks(n1,ids1);
}
static inline void DeleteVertexArrays(GLsizei n1,const GLuint * arrays1)
{
	 glDeleteVertexArrays(n1,arrays1);
}
static inline void DepthFunc(GLenum func1)
{
	 glDepthFunc(func1);
}
static inline void DepthMask(GLboolean flag1)
{
	 glDepthMask(flag1);
}
static inline void DepthRangef(GLfloat n1,GLfloat f1)
{
	 glDepthRangef(n1,f1);
}
static inline void DetachShader(GLuint program1,GLuint shader1)
{
	 glDetachShader(program1,shader1);
}
static inline void Disable(GLenum cap1)
{
	 glDisable(cap1);
}
static inline void DisableVertexAttribArray(GLuint index1)
{
	 glDisableVertexAttribArray(index1);
}
static inline void DispatchCompute(GLuint num_groups_x1,GLuint num_groups_y1,GLuint num_groups_z1)
{
	 glDispatchCompute(num_groups_x1,num_groups_y1,num_groups_z1);
}
static inline void DispatchComputeIndirect(GLintptr indirect1)
{
	 glDispatchComputeIndirect(indirect1);
}
static inline void DrawArrays(GLenum mode1,GLint first1,GLsizei count1)
{
	 glDrawArrays(mode1,first1,count1);
}
static inline void DrawArraysIndirect(GLenum mode1,const void * indirect1)
{
	 glDrawArraysIndirect(mode1,indirect1);
}
static inline void DrawArraysInstanced(GLenum mode1,GLint first1,GLsizei count1,GLsizei instancecount1)
{
	 glDrawArraysInstanced(mode1,first1,count1,instancecount1);
}
static inline void DrawBuffers(GLsizei n1,const GLenum * bufs1)
{
	 glDrawBuffers(n1,bufs1);
}
static inline void DrawElements(GLenum mode1,GLsizei count1,GLenum type1,const void * indices1)
{
	 glDrawElements(mode1,count1,type1,indices1);
}
static inline void DrawElementsIndirect(GLenum mode1,GLenum type1,const void * indirect1)
{
	 glDrawElementsIndirect(mode1,type1,indirect1);
}
static inline void DrawElementsInstanced(GLenum mode1,GLsizei count1,GLenum type1,const void * indices1,GLsizei instancecount1)
{
	 glDrawElementsInstanced(mode1,count1,type1,indices1,instancecount1);
}
static inline void DrawRangeElements(GLenum mode1,GLuint start1,GLuint end1,GLsizei count1,GLenum type1,const void * indices1)
{
	 glDrawRangeElements(mode1,start1,end1,count1,type1,indices1);
}
static inline void Enable(GLenum cap1)
{
	 glEnable(cap1);
}
static inline void EnableVertexAttribArray(GLuint index1)
{
	 glEnableVertexAttribArray(index1);
}
static inline void EndQuery(GLenum target1)
{
	 glEndQuery(target1);
}
static inline void EndTransformFeedback()
{
	 glEndTransformFeedback();
}
static inline GLsync FenceSync(GLenum condition1,GLbitfield flags1)
{
	return glFenceSync(condition1,flags1);
}
static inline void Finish()
{
	 glFinish();
}
static inline void Flush()
{
	 glFlush();
}
static inline void FlushMappedBufferRange(GLenum target1,GLintptr offset1,GLsizeiptr length1)
{
	 glFlushMappedBufferRange(target1,offset1,length1);
}
static inline void FramebufferParameteri(GLenum target1,GLenum pname1,GLint param1)
{
	 glFramebufferParameteri(target1,pname1,param1);
}
static inline void FramebufferRenderbuffer(GLenum target1,GLenum attachment1,GLenum renderbuffertarget1,GLuint renderbuffer1)
{
	 glFramebufferRenderbuffer(target1,attachment1,renderbuffertarget1,renderbuffer1);
}
static inline void FramebufferTexture2D(GLenum target1,GLenum attachment1,GLenum textarget1,GLuint texture1,GLint level1)
{
	 glFramebufferTexture2D(target1,attachment1,textarget1,texture1,level1);
}
static inline void FramebufferTextureLayer(GLenum target1,GLenum attachment1,GLuint texture1,GLint level1,GLint layer1)
{
	 glFramebufferTextureLayer(target1,attachment1,texture1,level1,layer1);
}
static inline void FrontFace(GLenum mode1)
{
	 glFrontFace(mode1);
}
static inline void GenBuffers(GLsizei n1,GLuint * buffers1)
{
	 glGenBuffers(n1,buffers1);
}
static inline void GenFramebuffers(GLsizei n1,GLuint * framebuffers1)
{
	 glGenFramebuffers(n1,framebuffers1);
}
static inline void GenProgramPipelines(GLsizei n1,GLuint * pipelines1)
{
	 glGenProgramPipelines(n1,pipelines1);
}
static inline void GenQueries(GLsizei n1,GLuint * ids1)
{
	 glGenQueries(n1,ids1);
}
static inline void GenRenderbuffers(GLsizei n1,GLuint * renderbuffers1)
{
	 glGenRenderbuffers(n1,renderbuffers1);
}
static inline void GenSamplers(GLsizei count1,GLuint * samplers1)
{
	 glGenSamplers(count1,samplers1);
}
static inline void GenTextures(GLsizei n1,GLuint * textures1)
{
	 glGenTextures(n1,textures1);
}
static inline void GenTransformFeedbacks(GLsizei n1,GLuint * ids1)
{
	 glGenTransformFeedbacks(n1,ids1);
}
static inline void GenVertexArrays(GLsizei n1,GLuint * arrays1)
{
	 glGenVertexArrays(n1,arrays1);
}
static inline void GenerateMipmap(GLenum target1)
{
	 glGenerateMipmap(target1);
}
static inline void GetActiveAttrib(GLuint program1,GLuint index1,GLsizei bufSize1,GLsizei * length1,GLint * size1,GLenum * type1,GLchar * name1)
{
	 glGetActiveAttrib(program1,index1,bufSize1,length1,size1,type1,name1);
}
static inline void GetActiveUniform(GLuint program1,GLuint index1,GLsizei bufSize1,GLsizei * length1,GLint * size1,GLenum * type1,GLchar * name1)
{
	 glGetActiveUniform(program1,index1,bufSize1,length1,size1,type1,name1);
}
static inline void GetActiveUniformBlockName(GLuint program1,GLuint uniformBlockIndex1,GLsizei bufSize1,GLsizei * length1,GLchar * uniformBlockName1)
{
	 glGetActiveUniformBlockName(program1,uniformBlockIndex1,bufSize1,length1,uniformBlockName1);
}
static inline void GetActiveUniformBlockiv(GLuint program1,GLuint uniformBlockIndex1,GLenum pname1,GLint * params1)
{
	 glGetActiveUniformBlockiv(program1,uniformBlockIndex1,pname1,params1);
}
static inline void GetActiveUniformsiv(GLuint program1,GLsizei uniformCount1,const GLuint * uniformIndices1,GLenum pname1,GLint * params1)
{
	 glGetActiveUniformsiv(program1,uniformCount1,uniformIndices1,pname1,params1);
}
static inline void GetAttachedShaders(GLuint program1,GLsizei maxCount1,GLsizei * count1,GLuint * shaders1)
{
	 glGetAttachedShaders(program1,maxCount1,count1,shaders1);
}
static inline GLint GetAttribLocation(GLuint program1,const GLchar * name1)
{
	return glGetAttribLocation(program1,name1);
}
static inline void GetBooleani_v(GLenum target1,GLuint index1,GLboolean * data1)
{
	 glGetBooleani_v(target1,index1,data1);
}
static inline void GetBooleanv(GLenum pname1,GLboolean * data1)
{
	 glGetBooleanv(pname1,data1);
}
static inline void GetBufferParameteri64v(GLenum target1,GLenum pname1,GLint64 * params1)
{
	 glGetBufferParameteri64v(target1,pname1,params1);
}
static inline void GetBufferParameteriv(GLenum target1,GLenum pname1,GLint * params1)
{
	 glGetBufferParameteriv(target1,pname1,params1);
}
static inline void GetBufferPointerv(GLenum target1,GLenum pname1,void ** params1)
{
	 glGetBufferPointerv(target1,pname1,params1);
}
static inline GLenum GetError()
{
	return glGetError();
}
static inline void GetFloatv(GLenum pname1,GLfloat * data1)
{
	 glGetFloatv(pname1,data1);
}
static inline GLint GetFragDataLocation(GLuint program1,const GLchar * name1)
{
	return glGetFragDataLocation(program1,name1);
}
static inline void GetFramebufferAttachmentParameteriv(GLenum target1,GLenum attachment1,GLenum pname1,GLint * params1)
{
	 glGetFramebufferAttachmentParameteriv(target1,attachment1,pname1,params1);
}
static inline void GetFramebufferParameteriv(GLenum target1,GLenum pname1,GLint * params1)
{
	 glGetFramebufferParameteriv(target1,pname1,params1);
}
static inline void GetInteger64i_v(GLenum target1,GLuint index1,GLint64 * data1)
{
	 glGetInteger64i_v(target1,index1,data1);
}
static inline void GetInteger64v(GLenum pname1,GLint64 * data1)
{
	 glGetInteger64v(pname1,data1);
}
static inline void GetIntegeri_v(GLenum target1,GLuint index1,GLint * data1)
{
	 glGetIntegeri_v(target1,index1,data1);
}
static inline void GetIntegerv(GLenum pname1,GLint * data1)
{
	 glGetIntegerv(pname1,data1);
}
static inline void GetInternalformativ(GLenum target1,GLenum internalformat1,GLenum pname1,GLsizei bufSize1,GLint * params1)
{
	 glGetInternalformativ(target1,internalformat1,pname1,bufSize1,params1);
}
static inline void GetMultisamplefv(GLenum pname1,GLuint index1,GLfloat * val1)
{
	 glGetMultisamplefv(pname1,index1,val1);
}
static inline void GetProgramBinary(GLuint program1,GLsizei bufSize1,GLsizei * length1,GLenum * binaryFormat1,void * binary1)
{
	 glGetProgramBinary(program1,bufSize1,length1,binaryFormat1,binary1);
}
static inline void GetProgramInfoLog(GLuint program1,GLsizei bufSize1,GLsizei * length1,GLchar * infoLog1)
{
	 glGetProgramInfoLog(program1,bufSize1,length1,infoLog1);
}
static inline void GetProgramInterfaceiv(GLuint program1,GLenum programInterface1,GLenum pname1,GLint * params1)
{
	 glGetProgramInterfaceiv(program1,programInterface1,pname1,params1);
}
static inline void GetProgramPipelineInfoLog(GLuint pipeline1,GLsizei bufSize1,GLsizei * length1,GLchar * infoLog1)
{
	 glGetProgramPipelineInfoLog(pipeline1,bufSize1,length1,infoLog1);
}
static inline void GetProgramPipelineiv(GLuint pipeline1,GLenum pname1,GLint * params1)
{
	 glGetProgramPipelineiv(pipeline1,pname1,params1);
}
static inline GLuint GetProgramResourceIndex(GLuint program1,GLenum programInterface1,const GLchar * name1)
{
	return glGetProgramResourceIndex(program1,programInterface1,name1);
}
static inline GLint GetProgramResourceLocation(GLuint program1,GLenum programInterface1,const GLchar * name1)
{
	return glGetProgramResourceLocation(program1,programInterface1,name1);
}
static inline void GetProgramResourceName(GLuint program1,GLenum programInterface1,GLuint index1,GLsizei bufSize1,GLsizei * length1,GLchar * name1)
{
	 glGetProgramResourceName(program1,programInterface1,index1,bufSize1,length1,name1);
}
static inline void GetProgramResourceiv(GLuint program1,GLenum programInterface1,GLuint index1,GLsizei propCount1,const GLenum * props1,GLsizei bufSize1,GLsizei * length1,GLint * params1)
{
	 glGetProgramResourceiv(program1,programInterface1,index1,propCount1,props1,bufSize1,length1,params1);
}
static inline void GetProgramiv(GLuint program1,GLenum pname1,GLint * params1)
{
	 glGetProgramiv(program1,pname1,params1);
}
static inline void GetQueryObjectuiv(GLuint id1,GLenum pname1,GLuint * params1)
{
	 glGetQueryObjectuiv(id1,pname1,params1);
}
static inline void GetQueryiv(GLenum target1,GLenum pname1,GLint * params1)
{
	 glGetQueryiv(target1,pname1,params1);
}
static inline void GetRenderbufferParameteriv(GLenum target1,GLenum pname1,GLint * params1)
{
	 glGetRenderbufferParameteriv(target1,pname1,params1);
}
static inline void GetSamplerParameterfv(GLuint sampler1,GLenum pname1,GLfloat * params1)
{
	 glGetSamplerParameterfv(sampler1,pname1,params1);
}
static inline void GetSamplerParameteriv(GLuint sampler1,GLenum pname1,GLint * params1)
{
	 glGetSamplerParameteriv(sampler1,pname1,params1);
}
static inline void GetShaderInfoLog(GLuint shader1,GLsizei bufSize1,GLsizei * length1,GLchar * infoLog1)
{
	 glGetShaderInfoLog(shader1,bufSize1,length1,infoLog1);
}
static inline void GetShaderPrecisionFormat(GLenum shadertype1,GLenum precisiontype1,GLint * range1,GLint * precision1)
{
	 glGetShaderPrecisionFormat(shadertype1,precisiontype1,range1,precision1);
}
static inline void GetShaderSource(GLuint shader1,GLsizei bufSize1,GLsizei * length1,GLchar * source1)
{
	 glGetShaderSource(shader1,bufSize1,length1,source1);
}
static inline void GetShaderiv(GLuint shader1,GLenum pname1,GLint * params1)
{
	 glGetShaderiv(shader1,pname1,params1);
}
static inline const GLubyte * GetString(GLenum name1)
{
	return glGetString(name1);
}
static inline const GLubyte * GetStringi(GLenum name1,GLuint index1)
{
	return glGetStringi(name1,index1);
}
static inline void GetSynciv(GLsync sync1,GLenum pname1,GLsizei bufSize1,GLsizei * length1,GLint * values1)
{
	 glGetSynciv(sync1,pname1,bufSize1,length1,values1);
}
static inline void GetTexLevelParameterfv(GLenum target1,GLint level1,GLenum pname1,GLfloat * params1)
{
	 glGetTexLevelParameterfv(target1,level1,pname1,params1);
}
static inline void GetTexLevelParameteriv(GLenum target1,GLint level1,GLenum pname1,GLint * params1)
{
	 glGetTexLevelParameteriv(target1,level1,pname1,params1);
}
static inline void GetTexParameterfv(GLenum target1,GLenum pname1,GLfloat * params1)
{
	 glGetTexParameterfv(target1,pname1,params1);
}
static inline void GetTexParameteriv(GLenum target1,GLenum pname1,GLint * params1)
{
	 glGetTexParameteriv(target1,pname1,params1);
}
static inline void GetTransformFeedbackVarying(GLuint program1,GLuint index1,GLsizei bufSize1,GLsizei * length1,GLsizei * size1,GLenum * type1,GLchar * name1)
{
	 glGetTransformFeedbackVarying(program1,index1,bufSize1,length1,size1,type1,name1);
}
static inline GLuint GetUniformBlockIndex(GLuint program1,const GLchar * uniformBlockName1)
{
	return glGetUniformBlockIndex(program1,uniformBlockName1);
}
static inline void GetUniformIndices(GLuint program1,GLsizei uniformCount1,const GLchar *const* uniformNames1,GLuint * uniformIndices1)
{
	 glGetUniformIndices(program1,uniformCount1,uniformNames1,uniformIndices1);
}
static inline GLint GetUniformLocation(GLuint program1,const GLchar * name1)
{
	return glGetUniformLocation(program1,name1);
}
static inline void GetUniformfv(GLuint program1,GLint location1,GLfloat * params1)
{
	 glGetUniformfv(program1,location1,params1);
}
static inline void GetUniformiv(GLuint program1,GLint location1,GLint * params1)
{
	 glGetUniformiv(program1,location1,params1);
}
static inline void GetUniformuiv(GLuint program1,GLint location1,GLuint * params1)
{
	 glGetUniformuiv(program1,location1,params1);
}
static inline void GetVertexAttribIiv(GLuint index1,GLenum pname1,GLint * params1)
{
	 glGetVertexAttribIiv(index1,pname1,params1);
}
static inline void GetVertexAttribIuiv(GLuint index1,GLenum pname1,GLuint * params1)
{
	 glGetVertexAttribIuiv(index1,pname1,params1);
}
static inline void GetVertexAttribPointerv(GLuint index1,GLenum pname1,void ** pointer1)
{
	 glGetVertexAttribPointerv(index1,pname1,pointer1);
}
static inline void GetVertexAttribfv(GLuint index1,GLenum pname1,GLfloat * params1)
{
	 glGetVertexAttribfv(index1,pname1,params1);
}
static inline void GetVertexAttribiv(GLuint index1,GLenum pname1,GLint * params1)
{
	 glGetVertexAttribiv(index1,pname1,params1);
}
static inline void Hint(GLenum target1,GLenum mode1)
{
	 glHint(target1,mode1);
}
static inline void InvalidateFramebuffer(GLenum target1,GLsizei numAttachments1,const GLenum * attachments1)
{
	 glInvalidateFramebuffer(target1,numAttachments1,attachments1);
}
static inline void InvalidateSubFramebuffer(GLenum target1,GLsizei numAttachments1,const GLenum * attachments1,GLint x1,GLint y1,GLsizei width1,GLsizei height1)
{
	 glInvalidateSubFramebuffer(target1,numAttachments1,attachments1,x1,y1,width1,height1);
}
static inline GLboolean IsBuffer(GLuint buffer1)
{
	return glIsBuffer(buffer1);
}
static inline GLboolean IsEnabled(GLenum cap1)
{
	return glIsEnabled(cap1);
}
static inline GLboolean IsFramebuffer(GLuint framebuffer1)
{
	return glIsFramebuffer(framebuffer1);
}
static inline GLboolean IsProgram(GLuint program1)
{
	return glIsProgram(program1);
}
static inline GLboolean IsProgramPipeline(GLuint pipeline1)
{
	return glIsProgramPipeline(pipeline1);
}
static inline GLboolean IsQuery(GLuint id1)
{
	return glIsQuery(id1);
}
static inline GLboolean IsRenderbuffer(GLuint renderbuffer1)
{
	return glIsRenderbuffer(renderbuffer1);
}
static inline GLboolean IsSampler(GLuint sampler1)
{
	return glIsSampler(sampler1);
}
static inline GLboolean IsShader(GLuint shader1)
{
	return glIsShader(shader1);
}
static inline GLboolean IsSync(GLsync sync1)
{
	return glIsSync(sync1);
}
static inline GLboolean IsTexture(GLuint texture1)
{
	return glIsTexture(texture1);
}
static inline GLboolean IsTransformFeedback(GLuint id1)
{
	return glIsTransformFeedback(id1);
}
static inline GLboolean IsVertexArray(GLuint array1)
{
	return glIsVertexArray(array1);
}
static inline void LineWidth(GLfloat width1)
{
	 glLineWidth(width1);
}
static inline void LinkProgram(GLuint program1)
{
	 glLinkProgram(program1);
}
static inline void * MapBufferRange(GLenum target1,GLintptr offset1,GLsizeiptr length1,GLbitfield access1)
{
	return glMapBufferRange(target1,offset1,length1,access1);
}
static inline void MemoryBarrier(GLbitfield barriers1)
{
	 glMemoryBarrier(barriers1);
}
static inline void MemoryBarrierByRegion(GLbitfield barriers1)
{
	 glMemoryBarrierByRegion(barriers1);
}
static inline void PauseTransformFeedback()
{
	 glPauseTransformFeedback();
}
static inline void PixelStorei(GLenum pname1,GLint param1)
{
	 glPixelStorei(pname1,param1);
}
static inline void PolygonOffset(GLfloat factor1,GLfloat units1)
{
	 glPolygonOffset(factor1,units1);
}
static inline void ProgramBinary(GLuint program1,GLenum binaryFormat1,const void * binary1,GLsizei length1)
{
	 glProgramBinary(program1,binaryFormat1,binary1,length1);
}
static inline void ProgramParameteri(GLuint program1,GLenum pname1,GLint value1)
{
	 glProgramParameteri(program1,pname1,value1);
}
static inline void ProgramUniform1f(GLuint program1,GLint location1,GLfloat v01)
{
	 glProgramUniform1f(program1,location1,v01);
}
static inline void ProgramUniform1fv(GLuint program1,GLint location1,GLsizei count1,const GLfloat * value1)
{
	 glProgramUniform1fv(program1,location1,count1,value1);
}
static inline void ProgramUniform1i(GLuint program1,GLint location1,GLint v01)
{
	 glProgramUniform1i(program1,location1,v01);
}
static inline void ProgramUniform1iv(GLuint program1,GLint location1,GLsizei count1,const GLint * value1)
{
	 glProgramUniform1iv(program1,location1,count1,value1);
}
static inline void ProgramUniform1ui(GLuint program1,GLint location1,GLuint v01)
{
	 glProgramUniform1ui(program1,location1,v01);
}
static inline void ProgramUniform1uiv(GLuint program1,GLint location1,GLsizei count1,const GLuint * value1)
{
	 glProgramUniform1uiv(program1,location1,count1,value1);
}
static inline void ProgramUniform2f(GLuint program1,GLint location1,GLfloat v01,GLfloat v11)
{
	 glProgramUniform2f(program1,location1,v01,v11);
}
static inline void ProgramUniform2fv(GLuint program1,GLint location1,GLsizei count1,const GLfloat * value1)
{
	 glProgramUniform2fv(program1,location1,count1,value1);
}
static inline void ProgramUniform2i(GLuint program1,GLint location1,GLint v01,GLint v11)
{
	 glProgramUniform2i(program1,location1,v01,v11);
}
static inline void ProgramUniform2iv(GLuint program1,GLint location1,GLsizei count1,const GLint * value1)
{
	 glProgramUniform2iv(program1,location1,count1,value1);
}
static inline void ProgramUniform2ui(GLuint program1,GLint location1,GLuint v01,GLuint v11)
{
	 glProgramUniform2ui(program1,location1,v01,v11);
}
static inline void ProgramUniform2uiv(GLuint program1,GLint location1,GLsizei count1,const GLuint * value1)
{
	 glProgramUniform2uiv(program1,location1,count1,value1);
}
static inline void ProgramUniform3f(GLuint program1,GLint location1,GLfloat v01,GLfloat v11,GLfloat v21)
{
	 glProgramUniform3f(program1,location1,v01,v11,v21);
}
static inline void ProgramUniform3fv(GLuint program1,GLint location1,GLsizei count1,const GLfloat * value1)
{
	 glProgramUniform3fv(program1,location1,count1,value1);
}
static inline void ProgramUniform3i(GLuint program1,GLint location1,GLint v01,GLint v11,GLint v21)
{
	 glProgramUniform3i(program1,location1,v01,v11,v21);
}
static inline void ProgramUniform3iv(GLuint program1,GLint location1,GLsizei count1,const GLint * value1)
{
	 glProgramUniform3iv(program1,location1,count1,value1);
}
static inline void ProgramUniform3ui(GLuint program1,GLint location1,GLuint v01,GLuint v11,GLuint v21)
{
	 glProgramUniform3ui(program1,location1,v01,v11,v21);
}
static inline void ProgramUniform3uiv(GLuint program1,GLint location1,GLsizei count1,const GLuint * value1)
{
	 glProgramUniform3uiv(program1,location1,count1,value1);
}
static inline void ProgramUniform4f(GLuint program1,GLint location1,GLfloat v01,GLfloat v11,GLfloat v21,GLfloat v31)
{
	 glProgramUniform4f(program1,location1,v01,v11,v21,v31);
}
static inline void ProgramUniform4fv(GLuint program1,GLint location1,GLsizei count1,const GLfloat * value1)
{
	 glProgramUniform4fv(program1,location1,count1,value1);
}
static inline void ProgramUniform4i(GLuint program1,GLint location1,GLint v01,GLint v11,GLint v21,GLint v31)
{
	 glProgramUniform4i(program1,location1,v01,v11,v21,v31);
}
static inline void ProgramUniform4iv(GLuint program1,GLint location1,GLsizei count1,const GLint * value1)
{
	 glProgramUniform4iv(program1,location1,count1,value1);
}
static inline void ProgramUniform4ui(GLuint program1,GLint location1,GLuint v01,GLuint v11,GLuint v21,GLuint v31)
{
	 glProgramUniform4ui(program1,location1,v01,v11,v21,v31);
}
static inline void ProgramUniform4uiv(GLuint program1,GLint location1,GLsizei count1,const GLuint * value1)
{
	 glProgramUniform4uiv(program1,location1,count1,value1);
}
static inline void ProgramUniformMatrix2fv(GLuint program1,GLint location1,GLsizei count1,GLboolean transpose1,const GLfloat * value1)
{
	 glProgramUniformMatrix2fv(program1,location1,count1,transpose1,value1);
}
static inline void ProgramUniformMatrix2x3fv(GLuint program1,GLint location1,GLsizei count1,GLboolean transpose1,const GLfloat * value1)
{
	 glProgramUniformMatrix2x3fv(program1,location1,count1,transpose1,value1);
}
static inline void ProgramUniformMatrix2x4fv(GLuint program1,GLint location1,GLsizei count1,GLboolean transpose1,const GLfloat * value1)
{
	 glProgramUniformMatrix2x4fv(program1,location1,count1,transpose1,value1);
}
static inline void ProgramUniformMatrix3fv(GLuint program1,GLint location1,GLsizei count1,GLboolean transpose1,const GLfloat * value1)
{
	 glProgramUniformMatrix3fv(program1,location1,count1,transpose1,value1);
}
static inline void ProgramUniformMatrix3x2fv(GLuint program1,GLint location1,GLsizei count1,GLboolean transpose1,const GLfloat * value1)
{
	 glProgramUniformMatrix3x2fv(program1,location1,count1,transpose1,value1);
}
static inline void ProgramUniformMatrix3x4fv(GLuint program1,GLint location1,GLsizei count1,GLboolean transpose1,const GLfloat * value1)
{
	 glProgramUniformMatrix3x4fv(program1,location1,count1,transpose1,value1);
}
static inline void ProgramUniformMatrix4fv(GLuint program1,GLint location1,GLsizei count1,GLboolean transpose1,const GLfloat * value1)
{
	 glProgramUniformMatrix4fv(program1,location1,count1,transpose1,value1);
}
static inline void ProgramUniformMatrix4x2fv(GLuint program1,GLint location1,GLsizei count1,GLboolean transpose1,const GLfloat * value1)
{
	 glProgramUniformMatrix4x2fv(program1,location1,count1,transpose1,value1);
}
static inline void ProgramUniformMatrix4x3fv(GLuint program1,GLint location1,GLsizei count1,GLboolean transpose1,const GLfloat * value1)
{
	 glProgramUniformMatrix4x3fv(program1,location1,count1,transpose1,value1);
}
static inline void ReadBuffer(GLenum src1)
{
	 glReadBuffer(src1);
}
static inline void ReadPixels(GLint x1,GLint y1,GLsizei width1,GLsizei height1,GLenum format1,GLenum type1,void * pixels1)
{
	 glReadPixels(x1,y1,width1,height1,format1,type1,pixels1);
}
static inline void ReleaseShaderCompiler()
{
	 glReleaseShaderCompiler();
}
static inline void RenderbufferStorage(GLenum target1,GLenum internalformat1,GLsizei width1,GLsizei height1)
{
	 glRenderbufferStorage(target1,internalformat1,width1,height1);
}
static inline void RenderbufferStorageMultisample(GLenum target1,GLsizei samples1,GLenum internalformat1,GLsizei width1,GLsizei height1)
{
	 glRenderbufferStorageMultisample(target1,samples1,internalformat1,width1,height1);
}
static inline void ResumeTransformFeedback()
{
	 glResumeTransformFeedback();
}
static inline void SampleCoverage(GLfloat value1,GLboolean invert1)
{
	 glSampleCoverage(value1,invert1);
}
static inline void SampleMaski(GLuint maskNumber1,GLbitfield mask1)
{
	 glSampleMaski(maskNumber1,mask1);
}
static inline void SamplerParameterf(GLuint sampler1,GLenum pname1,GLfloat param1)
{
	 glSamplerParameterf(sampler1,pname1,param1);
}
static inline void SamplerParameterfv(GLuint sampler1,GLenum pname1,const GLfloat * param1)
{
	 glSamplerParameterfv(sampler1,pname1,param1);
}
static inline void SamplerParameteri(GLuint sampler1,GLenum pname1,GLint param1)
{
	 glSamplerParameteri(sampler1,pname1,param1);
}
static inline void SamplerParameteriv(GLuint sampler1,GLenum pname1,const GLint * param1)
{
	 glSamplerParameteriv(sampler1,pname1,param1);
}
static inline void Scissor(GLint x1,GLint y1,GLsizei width1,GLsizei height1)
{
	 glScissor(x1,y1,width1,height1);
}
static inline void ShaderBinary(GLsizei count1,const GLuint * shaders1,GLenum binaryformat1,const void * binary1,GLsizei length1)
{
	 glShaderBinary(count1,shaders1,binaryformat1,binary1,length1);
}
static inline void ShaderSource(GLuint shader1,GLsizei count1,const GLchar *const* string1,const GLint * length1)
{
	 glShaderSource(shader1,count1,string1,length1);
}
static inline void StencilFunc(GLenum func1,GLint ref1,GLuint mask1)
{
	 glStencilFunc(func1,ref1,mask1);
}
static inline void StencilFuncSeparate(GLenum face1,GLenum func1,GLint ref1,GLuint mask1)
{
	 glStencilFuncSeparate(face1,func1,ref1,mask1);
}
static inline void StencilMask(GLuint mask1)
{
	 glStencilMask(mask1);
}
static inline void StencilMaskSeparate(GLenum face1,GLuint mask1)
{
	 glStencilMaskSeparate(face1,mask1);
}
static inline void StencilOp(GLenum fail1,GLenum zfail1,GLenum zpass1)
{
	 glStencilOp(fail1,zfail1,zpass1);
}
static inline void StencilOpSeparate(GLenum face1,GLenum sfail1,GLenum dpfail1,GLenum dppass1)
{
	 glStencilOpSeparate(face1,sfail1,dpfail1,dppass1);
}
static inline void TexImage2D(GLenum target1,GLint level1,GLint internalformat1,GLsizei width1,GLsizei height1,GLint border1,GLenum format1,GLenum type1,const void * pixels1)
{
	 glTexImage2D(target1,level1,internalformat1,width1,height1,border1,format1,type1,pixels1);
}
static inline void TexImage3D(GLenum target1,GLint level1,GLint internalformat1,GLsizei width1,GLsizei height1,GLsizei depth1,GLint border1,GLenum format1,GLenum type1,const void * pixels1)
{
	 glTexImage3D(target1,level1,internalformat1,width1,height1,depth1,border1,format1,type1,pixels1);
}
static inline void TexParameterf(GLenum target1,GLenum pname1,GLfloat param1)
{
	 glTexParameterf(target1,pname1,param1);
}
static inline void TexParameterfv(GLenum target1,GLenum pname1,const GLfloat * params1)
{
	 glTexParameterfv(target1,pname1,params1);
}
static inline void TexParameteri(GLenum target1,GLenum pname1,GLint param1)
{
	 glTexParameteri(target1,pname1,param1);
}
static inline void TexParameteriv(GLenum target1,GLenum pname1,const GLint * params1)
{
	 glTexParameteriv(target1,pname1,params1);
}
static inline void TexStorage2D(GLenum target1,GLsizei levels1,GLenum internalformat1,GLsizei width1,GLsizei height1)
{
	 glTexStorage2D(target1,levels1,internalformat1,width1,height1);
}
static inline void TexStorage2DMultisample(GLenum target1,GLsizei samples1,GLenum internalformat1,GLsizei width1,GLsizei height1,GLboolean fixedsamplelocations1)
{
	 glTexStorage2DMultisample(target1,samples1,internalformat1,width1,height1,fixedsamplelocations1);
}
static inline void TexStorage3D(GLenum target1,GLsizei levels1,GLenum internalformat1,GLsizei width1,GLsizei height1,GLsizei depth1)
{
	 glTexStorage3D(target1,levels1,internalformat1,width1,height1,depth1);
}
static inline void TexSubImage2D(GLenum target1,GLint level1,GLint xoffset1,GLint yoffset1,GLsizei width1,GLsizei height1,GLenum format1,GLenum type1,const void * pixels1)
{
	 glTexSubImage2D(target1,level1,xoffset1,yoffset1,width1,height1,format1,type1,pixels1);
}
static inline void TexSubImage3D(GLenum target1,GLint level1,GLint xoffset1,GLint yoffset1,GLint zoffset1,GLsizei width1,GLsizei height1,GLsizei depth1,GLenum format1,GLenum type1,const void * pixels1)
{
	 glTexSubImage3D(target1,level1,xoffset1,yoffset1,zoffset1,width1,height1,depth1,format1,type1,pixels1);
}
static inline void TransformFeedbackVaryings(GLuint program1,GLsizei count1,const GLchar *const* varyings1,GLenum bufferMode1)
{
	 glTransformFeedbackVaryings(program1,count1,varyings1,bufferMode1);
}
static inline void Uniform1f(GLint location1,GLfloat v01)
{
	 glUniform1f(location1,v01);
}
static inline void Uniform1fv(GLint location1,GLsizei count1,const GLfloat * value1)
{
	 glUniform1fv(location1,count1,value1);
}
static inline void Uniform1i(GLint location1,GLint v01)
{
	 glUniform1i(location1,v01);
}
static inline void Uniform1iv(GLint location1,GLsizei count1,const GLint * value1)
{
	 glUniform1iv(location1,count1,value1);
}
static inline void Uniform1ui(GLint location1,GLuint v01)
{
	 glUniform1ui(location1,v01);
}
static inline void Uniform1uiv(GLint location1,GLsizei count1,const GLuint * value1)
{
	 glUniform1uiv(location1,count1,value1);
}
static inline void Uniform2f(GLint location1,GLfloat v01,GLfloat v11)
{
	 glUniform2f(location1,v01,v11);
}
static inline void Uniform2fv(GLint location1,GLsizei count1,const GLfloat * value1)
{
	 glUniform2fv(location1,count1,value1);
}
static inline void Uniform2i(GLint location1,GLint v01,GLint v11)
{
	 glUniform2i(location1,v01,v11);
}
static inline void Uniform2iv(GLint location1,GLsizei count1,const GLint * value1)
{
	 glUniform2iv(location1,count1,value1);
}
static inline void Uniform2ui(GLint location1,GLuint v01,GLuint v11)
{
	 glUniform2ui(location1,v01,v11);
}
static inline void Uniform2uiv(GLint location1,GLsizei count1,const GLuint * value1)
{
	 glUniform2uiv(location1,count1,value1);
}
static inline void Uniform3f(GLint location1,GLfloat v01,GLfloat v11,GLfloat v21)
{
	 glUniform3f(location1,v01,v11,v21);
}
static inline void Uniform3fv(GLint location1,GLsizei count1,const GLfloat * value1)
{
	 glUniform3fv(location1,count1,value1);
}
static inline void Uniform3i(GLint location1,GLint v01,GLint v11,GLint v21)
{
	 glUniform3i(location1,v01,v11,v21);
}
static inline void Uniform3iv(GLint location1,GLsizei count1,const GLint * value1)
{
	 glUniform3iv(location1,count1,value1);
}
static inline void Uniform3ui(GLint location1,GLuint v01,GLuint v11,GLuint v21)
{
	 glUniform3ui(location1,v01,v11,v21);
}
static inline void Uniform3uiv(GLint location1,GLsizei count1,const GLuint * value1)
{
	 glUniform3uiv(location1,count1,value1);
}
static inline void Uniform4f(GLint location1,GLfloat v01,GLfloat v11,GLfloat v21,GLfloat v31)
{
	 glUniform4f(location1,v01,v11,v21,v31);
}
static inline void Uniform4fv(GLint location1,GLsizei count1,const GLfloat * value1)
{
	 glUniform4fv(location1,count1,value1);
}
static inline void Uniform4i(GLint location1,GLint v01,GLint v11,GLint v21,GLint v31)
{
	 glUniform4i(location1,v01,v11,v21,v31);
}
static inline void Uniform4iv(GLint location1,GLsizei count1,const GLint * value1)
{
	 glUniform4iv(location1,count1,value1);
}
static inline void Uniform4ui(GLint location1,GLuint v01,GLuint v11,GLuint v21,GLuint v31)
{
	 glUniform4ui(location1,v01,v11,v21,v31);
}
static inline void Uniform4uiv(GLint location1,GLsizei count1,const GLuint * value1)
{
	 glUniform4uiv(location1,count1,value1);
}
static inline void UniformBlockBinding(GLuint program1,GLuint uniformBlockIndex1,GLuint uniformBlockBinding1)
{
	 glUniformBlockBinding(program1,uniformBlockIndex1,uniformBlockBinding1);
}
static inline void UniformMatrix2fv(GLint location1,GLsizei count1,GLboolean transpose1,const GLfloat * value1)
{
	 glUniformMatrix2fv(location1,count1,transpose1,value1);
}
static inline void UniformMatrix2x3fv(GLint location1,GLsizei count1,GLboolean transpose1,const GLfloat * value1)
{
	 glUniformMatrix2x3fv(location1,count1,transpose1,value1);
}
static inline void UniformMatrix2x4fv(GLint location1,GLsizei count1,GLboolean transpose1,const GLfloat * value1)
{
	 glUniformMatrix2x4fv(location1,count1,transpose1,value1);
}
static inline void UniformMatrix3fv(GLint location1,GLsizei count1,GLboolean transpose1,const GLfloat * value1)
{
	 glUniformMatrix3fv(location1,count1,transpose1,value1);
}
static inline void UniformMatrix3x2fv(GLint location1,GLsizei count1,GLboolean transpose1,const GLfloat * value1)
{
	 glUniformMatrix3x2fv(location1,count1,transpose1,value1);
}
static inline void UniformMatrix3x4fv(GLint location1,GLsizei count1,GLboolean transpose1,const GLfloat * value1)
{
	 glUniformMatrix3x4fv(location1,count1,transpose1,value1);
}
static inline void UniformMatrix4fv(GLint location1,GLsizei count1,GLboolean transpose1,const GLfloat * value1)
{
	 glUniformMatrix4fv(location1,count1,transpose1,value1);
}
static inline void UniformMatrix4x2fv(GLint location1,GLsizei count1,GLboolean transpose1,const GLfloat * value1)
{
	 glUniformMatrix4x2fv(location1,count1,transpose1,value1);
}
static inline void UniformMatrix4x3fv(GLint location1,GLsizei count1,GLboolean transpose1,const GLfloat * value1)
{
	 glUniformMatrix4x3fv(location1,count1,transpose1,value1);
}
static inline GLboolean UnmapBuffer(GLenum target1)
{
	return glUnmapBuffer(target1);
}
static inline void UseProgram(GLuint program1)
{
	 glUseProgram(program1);
}
static inline void UseProgramStages(GLuint pipeline1,GLbitfield stages1,GLuint program1)
{
	 glUseProgramStages(pipeline1,stages1,program1);
}
static inline void ValidateProgram(GLuint program1)
{
	 glValidateProgram(program1);
}
static inline void ValidateProgramPipeline(GLuint pipeline1)
{
	 glValidateProgramPipeline(pipeline1);
}
static inline void VertexAttrib1f(GLuint index1,GLfloat x1)
{
	 glVertexAttrib1f(index1,x1);
}
static inline void VertexAttrib1fv(GLuint index1,const GLfloat * v1)
{
	 glVertexAttrib1fv(index1,v1);
}
static inline void VertexAttrib2f(GLuint index1,GLfloat x1,GLfloat y1)
{
	 glVertexAttrib2f(index1,x1,y1);
}
static inline void VertexAttrib2fv(GLuint index1,const GLfloat * v1)
{
	 glVertexAttrib2fv(index1,v1);
}
static inline void VertexAttrib3f(GLuint index1,GLfloat x1,GLfloat y1,GLfloat z1)
{
	 glVertexAttrib3f(index1,x1,y1,z1);
}
static inline void VertexAttrib3fv(GLuint index1,const GLfloat * v1)
{
	 glVertexAttrib3fv(index1,v1);
}
static inline void VertexAttrib4f(GLuint index1,GLfloat x1,GLfloat y1,GLfloat z1,GLfloat w1)
{
	 glVertexAttrib4f(index1,x1,y1,z1,w1);
}
static inline void VertexAttrib4fv(GLuint index1,const GLfloat * v1)
{
	 glVertexAttrib4fv(index1,v1);
}
static inline void VertexAttribBinding(GLuint attribindex1,GLuint bindingindex1)
{
	 glVertexAttribBinding(attribindex1,bindingindex1);
}
static inline void VertexAttribDivisor(GLuint index1,GLuint divisor1)
{
	 glVertexAttribDivisor(index1,divisor1);
}
static inline void VertexAttribFormat(GLuint attribindex1,GLint size1,GLenum type1,GLboolean normalized1,GLuint relativeoffset1)
{
	 glVertexAttribFormat(attribindex1,size1,type1,normalized1,relativeoffset1);
}
static inline void VertexAttribI4i(GLuint index1,GLint x1,GLint y1,GLint z1,GLint w1)
{
	 glVertexAttribI4i(index1,x1,y1,z1,w1);
}
static inline void VertexAttribI4iv(GLuint index1,const GLint * v1)
{
	 glVertexAttribI4iv(index1,v1);
}
static inline void VertexAttribI4ui(GLuint index1,GLuint x1,GLuint y1,GLuint z1,GLuint w1)
{
	 glVertexAttribI4ui(index1,x1,y1,z1,w1);
}
static inline void VertexAttribI4uiv(GLuint index1,const GLuint * v1)
{
	 glVertexAttribI4uiv(index1,v1);
}
static inline void VertexAttribIFormat(GLuint attribindex1,GLint size1,GLenum type1,GLuint relativeoffset1)
{
	 glVertexAttribIFormat(attribindex1,size1,type1,relativeoffset1);
}
static inline void VertexAttribIPointer(GLuint index1,GLint size1,GLenum type1,GLsizei stride1,const void * pointer1)
{
	 glVertexAttribIPointer(index1,size1,type1,stride1,pointer1);
}
static inline void VertexAttribPointer(GLuint index1,GLint size1,GLenum type1,GLboolean normalized1,GLsizei stride1,const void * pointer1)
{
	 glVertexAttribPointer(index1,size1,type1,normalized1,stride1,pointer1);
}
static inline void VertexBindingDivisor(GLuint bindingindex1,GLuint divisor1)
{
	 glVertexBindingDivisor(bindingindex1,divisor1);
}
static inline void Viewport(GLint x1,GLint y1,GLsizei width1,GLsizei height1)
{
	 glViewport(x1,y1,width1,height1);
}
static inline void WaitSync(GLsync sync1,GLbitfield flags1,GLuint64 timeout1)
{
	 glWaitSync(sync1,flags1,timeout1);
}}
#endif
